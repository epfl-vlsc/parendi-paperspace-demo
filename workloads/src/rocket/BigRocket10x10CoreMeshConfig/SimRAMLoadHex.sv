// Generated by CIRCT firtool-1.30.0
module SimRAMLoadHex #(parameter SIZE=8192,
                     parameter BITS=8,
                     parameter LANES=8,
                     parameter ADDR_BITS = $clog2(SIZE)
)
(
   input  wire [ADDR_BITS - 1 : 0] addr,
   input  wire [BITS * LANES - 1 : 0] wdata,
   input  wire [LANES - 1 : 0] wstrb,
   input  wire wen,
   input  wire ren,
   input  wire clock,
   input  wire reset,
   output wire [BITS * LANES - 1 : 0] rdata
);

   logic [BITS * LANES - 1 : 0] storage [0 : SIZE - 1];

   typedef logic [7:0][255:0] sstr_t;
   logic [63:0] cycle_counter = '0;
   always_ff @(posedge clock) cycle_counter <= cycle_counter + 1;
`ifndef SYNTHESIS
   initial begin: load_data
       sstr_t filename = '0;
       if (!$value$plusargs("binary=%s", filename)) begin
           $display("+binary=HEXFILE is required.");
           $stop;
       end
       $readmemh(filename, storage);
   end
`endif
   logic [ADDR_BITS - 1 : 0] addr_q;
   always_ff @(posedge clock) begin
       if (wen) begin
           for (int i = 0; i < LANES; i = i + 1) begin
               if (wstrb[i]) begin
                   storage[addr][i * BITS +: BITS] <= wdata[i * BITS +: BITS];
               end
           end
       end
       if (ren) begin
           addr_q <= addr;
       end
   end
   assign rdata = storage[addr_q];
endmodule
