// Generated by CIRCT firtool-1.30.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module CSRFile(
  input         clock,
                reset,
                io_ungated_clock,
                io_interrupts_debug,
                io_interrupts_meip,
                io_hartid,
  input  [11:0] io_rw_addr,
  input  [2:0]  io_rw_cmd,
  input  [63:0] io_rw_wdata,
  input  [31:0] io_decode_0_inst,
  input         io_exception,
                io_retire,
  input  [63:0] io_cause,
  input  [33:0] io_pc,
                io_tval,
  input         io_gva,
  input  [31:0] io_inst_0,
  output [63:0] io_rw_rdata,
  output        io_decode_0_read_illegal,
                io_decode_0_write_illegal,
                io_decode_0_write_flush,
                io_decode_0_system_illegal,
                io_csr_stall,
                io_eret,
                io_singleStep,
                io_status_debug,
                io_status_wfi,
  output [31:0] io_status_isa,
  output [33:0] io_evec,
  output [63:0] io_time,
  output        io_interrupt,
  output [63:0] io_interrupt_cause,
  output        io_bp_0_control_action,
                io_bp_0_control_chain,
  output [1:0]  io_bp_0_control_tmatch,
  output        io_bp_0_control_x,
                io_bp_0_control_w,
                io_bp_0_control_r,
  output [32:0] io_bp_0_address,
  output        io_pmp_0_cfg_l,
  output [1:0]  io_pmp_0_cfg_a,
  output        io_pmp_0_cfg_x,
                io_pmp_0_cfg_w,
                io_pmp_0_cfg_r,
  output [29:0] io_pmp_0_addr,
  output [31:0] io_pmp_0_mask,
  output        io_pmp_1_cfg_l,
  output [1:0]  io_pmp_1_cfg_a,
  output        io_pmp_1_cfg_x,
                io_pmp_1_cfg_w,
                io_pmp_1_cfg_r,
  output [29:0] io_pmp_1_addr,
  output [31:0] io_pmp_1_mask,
  output        io_pmp_2_cfg_l,
  output [1:0]  io_pmp_2_cfg_a,
  output        io_pmp_2_cfg_x,
                io_pmp_2_cfg_w,
                io_pmp_2_cfg_r,
  output [29:0] io_pmp_2_addr,
  output [31:0] io_pmp_2_mask,
  output        io_pmp_3_cfg_l,
  output [1:0]  io_pmp_3_cfg_a,
  output        io_pmp_3_cfg_x,
                io_pmp_3_cfg_w,
                io_pmp_3_cfg_r,
  output [29:0] io_pmp_3_addr,
  output [31:0] io_pmp_3_mask,
  output        io_pmp_4_cfg_l,
  output [1:0]  io_pmp_4_cfg_a,
  output        io_pmp_4_cfg_x,
                io_pmp_4_cfg_w,
                io_pmp_4_cfg_r,
  output [29:0] io_pmp_4_addr,
  output [31:0] io_pmp_4_mask,
  output        io_pmp_5_cfg_l,
  output [1:0]  io_pmp_5_cfg_a,
  output        io_pmp_5_cfg_x,
                io_pmp_5_cfg_w,
                io_pmp_5_cfg_r,
  output [29:0] io_pmp_5_addr,
  output [31:0] io_pmp_5_mask,
  output        io_pmp_6_cfg_l,
  output [1:0]  io_pmp_6_cfg_a,
  output        io_pmp_6_cfg_x,
                io_pmp_6_cfg_w,
                io_pmp_6_cfg_r,
  output [29:0] io_pmp_6_addr,
  output [31:0] io_pmp_6_mask,
  output        io_pmp_7_cfg_l,
  output [1:0]  io_pmp_7_cfg_a,
  output        io_pmp_7_cfg_x,
                io_pmp_7_cfg_w,
                io_pmp_7_cfg_r,
  output [29:0] io_pmp_7_addr,
  output [31:0] io_pmp_7_mask,
  output        io_inhibit_cycle,
                io_trace_0_valid,
  output [33:0] io_trace_0_iaddr,
  output [31:0] io_trace_0_insn,
  output        io_trace_0_exception,
  output [63:0] io_customCSRs_0_value
);

  wire [63:0] _io_rw_rdata_WIRE;	// @[Mux.scala:27:73]
  reg         io_status_cease_r;	// @[Reg.scala:35:20]
  wire        _io_singleStep_output;	// @[CSR.scala:941:34]
  reg         reg_mstatus_gva;	// @[CSR.scala:373:28]
  reg         reg_mstatus_mpie;	// @[CSR.scala:373:28]
  reg         reg_mstatus_mie;	// @[CSR.scala:373:28]
  reg         reg_dcsr_ebreakm;	// @[CSR.scala:381:25]
  reg  [2:0]  reg_dcsr_cause;	// @[CSR.scala:381:25]
  reg         reg_dcsr_step;	// @[CSR.scala:381:25]
  reg         reg_debug;	// @[CSR.scala:453:26]
  reg  [33:0] reg_dpc;	// @[CSR.scala:454:20]
  reg  [63:0] reg_dscratch0;	// @[CSR.scala:455:26]
  reg         reg_singleStepped;	// @[CSR.scala:457:30]
  reg         reg_bp_0_control_dmode;	// @[CSR.scala:463:19]
  reg         reg_bp_0_control_action;	// @[CSR.scala:463:19]
  reg         reg_bp_0_control_chain;	// @[CSR.scala:463:19]
  reg  [1:0]  reg_bp_0_control_tmatch;	// @[CSR.scala:463:19]
  reg         reg_bp_0_control_x;	// @[CSR.scala:463:19]
  reg         reg_bp_0_control_w;	// @[CSR.scala:463:19]
  reg         reg_bp_0_control_r;	// @[CSR.scala:463:19]
  reg  [32:0] reg_bp_0_address;	// @[CSR.scala:463:19]
  reg         reg_pmp_0_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_0_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_0_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_0_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_0_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_0_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_1_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_1_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_1_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_1_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_1_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_1_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_2_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_2_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_2_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_2_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_2_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_2_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_3_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_3_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_3_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_3_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_3_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_3_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_4_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_4_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_4_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_4_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_4_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_4_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_5_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_5_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_5_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_5_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_5_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_5_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_6_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_6_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_6_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_6_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_6_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_6_addr;	// @[CSR.scala:464:20]
  reg         reg_pmp_7_cfg_l;	// @[CSR.scala:464:20]
  reg  [1:0]  reg_pmp_7_cfg_a;	// @[CSR.scala:464:20]
  reg         reg_pmp_7_cfg_x;	// @[CSR.scala:464:20]
  reg         reg_pmp_7_cfg_w;	// @[CSR.scala:464:20]
  reg         reg_pmp_7_cfg_r;	// @[CSR.scala:464:20]
  reg  [29:0] reg_pmp_7_addr;	// @[CSR.scala:464:20]
  reg  [63:0] reg_mie;	// @[CSR.scala:466:20]
  reg  [33:0] reg_mepc;	// @[CSR.scala:476:21]
  reg  [63:0] reg_mcause;	// @[CSR.scala:477:27]
  reg  [33:0] reg_mtval;	// @[CSR.scala:478:22]
  reg  [63:0] reg_mscratch;	// @[CSR.scala:480:25]
  reg  [31:0] reg_mtvec;	// @[CSR.scala:483:31]
  reg         reg_wfi;	// @[CSR.scala:542:54]
  reg  [2:0]  reg_mcountinhibit;	// @[CSR.scala:551:34]
  reg  [5:0]  small_0;	// @[Counters.scala:45:41]
  reg  [57:0] large_0;	// @[Counters.scala:50:31]
  wire [63:0] value = {large_0, small_0};	// @[Cat.scala:33:92, Counters.scala:45:41, :50:31]
  reg  [5:0]  small_1;	// @[Counters.scala:45:41]
  reg  [57:0] large_1;	// @[Counters.scala:50:31]
  wire [63:0] value_1 = {large_1, small_1};	// @[Cat.scala:33:92, Counters.scala:45:41, :50:31]
  wire        _T_247 = io_interrupts_meip & reg_mie[11];	// @[CSR.scala:466:20, :575:56]
  wire        _which_T_19 = reg_mstatus_mie & _T_247;	// @[CSR.scala:373:28, :575:56, :581:25]
  wire [29:0] _GEN = {reg_pmp_0_addr[28:0], reg_pmp_0_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_0 = {reg_pmp_1_addr[28:0], reg_pmp_1_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_1 = {reg_pmp_2_addr[28:0], reg_pmp_2_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_2 = {reg_pmp_3_addr[28:0], reg_pmp_3_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_3 = {reg_pmp_4_addr[28:0], reg_pmp_4_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_4 = {reg_pmp_5_addr[28:0], reg_pmp_5_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_5 = {reg_pmp_6_addr[28:0], reg_pmp_6_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  wire [29:0] _GEN_6 = {reg_pmp_7_addr[28:0], reg_pmp_7_cfg_a[0]};	// @[CSR.scala:464:20, PMP.scala:57:31, :58:23]
  reg  [63:0] reg_misa;	// @[CSR.scala:610:25]
  wire [31:0] _read_mtvec_T_5 = reg_mtvec & {24'hFFFFFF, ~(reg_mtvec[0] ? 8'hFE : 8'h2)};	// @[CSR.scala:369:47, :483:31, :1584:{39,41}, package.scala:166:{35,37,41}]
  wire [33:0] _GEN_7 = {32'h0, ~(reg_misa[2]), 1'h1};	// @[CSR.scala:369:47, :610:25, :1583:{31,36,45}]
  wire [33:0] _T_30 = ~(~reg_mepc | _GEN_7);	// @[CSR.scala:476:21, :1583:{26,28,31}]
  wire [33:0] _T_44 = ~(~reg_dpc | _GEN_7);	// @[CSR.scala:454:20, :1583:{26,28,31}]
  reg  [63:0] reg_custom_0;	// @[CSR.scala:753:43]
  wire [11:0] decoded_decoded_invInputs = ~io_rw_addr;	// @[pla.scala:78:21]
  wire [11:0] _decoded_decoded_T = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_2 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_4 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_6 = {io_rw_addr[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_8 = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_68 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_70 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_72 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_74 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_78 = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_82 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_84 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_86 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_88 = {io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_90 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_92 = {io_rw_addr[0], decoded_decoded_invInputs[1], io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_94 = {decoded_decoded_invInputs[0], io_rw_addr[1], io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_96 = {io_rw_addr[0], io_rw_addr[1], io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_116 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_118 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_122 = {decoded_decoded_invInputs[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_124 = {io_rw_addr[0], decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_126 = {io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], io_rw_addr[5], decoded_decoded_invInputs[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [5:0]  _decoded_decoded_T_128 = {io_rw_addr[6], io_rw_addr[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], decoded_decoded_invInputs[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [10:0] _decoded_decoded_T_130 = {decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], io_rw_addr[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoded_decoded_T_132 = {decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], io_rw_addr[11]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [63:0] _reg_bp_0_control_WIRE_1 = ((io_rw_cmd[1] ? _io_rw_rdata_WIRE : 64'h0) | io_rw_wdata) & ~((&(io_rw_cmd[1:0])) ? io_rw_wdata : 64'h0);	// @[CSR.scala:1561:{9,13,30,39,41,45,49,55}, Mux.scala:27:73]
  wire        system_insn = io_rw_cmd == 3'h4;	// @[CSR.scala:818:31, Mux.scala:47:70]
  wire [11:0] _GEN_8 = ~io_rw_addr;	// @[pla.scala:78:21]
  wire        insn_call = system_insn & (&{_GEN_8[0], _GEN_8[1], _GEN_8[2], _GEN_8[3], _GEN_8[4], _GEN_8[5], _GEN_8[6], _GEN_8[7], _GEN_8[8], _GEN_8[9], _GEN_8[10], _GEN_8[11]});	// @[CSR.scala:818:31, :835:83, Cat.scala:33:92, pla.scala:78:21, :91:29, :98:74]
  wire        insn_break = system_insn & (&{io_rw_addr[0], _GEN_8[1], _GEN_8[2], _GEN_8[3], _GEN_8[4], _GEN_8[5], _GEN_8[6], _GEN_8[7], _GEN_8[8], _GEN_8[9], _GEN_8[10], _GEN_8[11]});	// @[CSR.scala:818:31, :835:83, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  wire        insn_ret = system_insn & (|{&{_GEN_8[2], _GEN_8[3], _GEN_8[4], _GEN_8[5], _GEN_8[6], _GEN_8[7], io_rw_addr[8], io_rw_addr[9], _GEN_8[10], _GEN_8[11]}, &{io_rw_addr[10], _GEN_8[11]}});	// @[CSR.scala:818:31, :835:83, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  wire [9:0]  _GEN_9 = ~(io_decode_0_inst[31:22]);	// @[pla.scala:78:21]
  wire        csr_exists =
    io_decode_0_inst[31:20] == 12'h7A0 | io_decode_0_inst[31:20] == 12'h7A1 | io_decode_0_inst[31:20] == 12'h7A2 | io_decode_0_inst[31:20] == 12'h7A3 | io_decode_0_inst[31:20] == 12'h301 | io_decode_0_inst[31:20] == 12'h300 | io_decode_0_inst[31:20] == 12'h305 | io_decode_0_inst[31:20] == 12'h344 | io_decode_0_inst[31:20] == 12'h304 | io_decode_0_inst[31:20] == 12'h340 | io_decode_0_inst[31:20] == 12'h341 | io_decode_0_inst[31:20] == 12'h343 | io_decode_0_inst[31:20] == 12'h342 | io_decode_0_inst[31:20] == 12'hF14 | io_decode_0_inst[31:20] == 12'h7B0 | io_decode_0_inst[31:20] == 12'h7B1 | io_decode_0_inst[31:20] == 12'h7B2 | io_decode_0_inst[31:20] == 12'h320 | io_decode_0_inst[31:20] == 12'hB00 | io_decode_0_inst[31:20] == 12'hB02 | io_decode_0_inst[31:20] == 12'h323 | io_decode_0_inst[31:20] == 12'hB03 | io_decode_0_inst[31:20] == 12'hC03 | io_decode_0_inst[31:20] == 12'h324 | io_decode_0_inst[31:20] == 12'hB04 | io_decode_0_inst[31:20] == 12'hC04 | io_decode_0_inst[31:20] == 12'h325 | io_decode_0_inst[31:20] == 12'hB05 | io_decode_0_inst[31:20] == 12'hC05 | io_decode_0_inst[31:20] == 12'h326 | io_decode_0_inst[31:20] == 12'hB06 | io_decode_0_inst[31:20] == 12'hC06 | io_decode_0_inst[31:20] == 12'h327 | io_decode_0_inst[31:20] == 12'hB07 | io_decode_0_inst[31:20] == 12'hC07 | io_decode_0_inst[31:20] == 12'h328 | io_decode_0_inst[31:20] == 12'hB08 | io_decode_0_inst[31:20] == 12'hC08 | io_decode_0_inst[31:20] == 12'h329 | io_decode_0_inst[31:20] == 12'hB09 | io_decode_0_inst[31:20] == 12'hC09 | io_decode_0_inst[31:20] == 12'h32A | io_decode_0_inst[31:20] == 12'hB0A | io_decode_0_inst[31:20] == 12'hC0A | io_decode_0_inst[31:20] == 12'h32B | io_decode_0_inst[31:20] == 12'hB0B | io_decode_0_inst[31:20] == 12'hC0B | io_decode_0_inst[31:20] == 12'h32C | io_decode_0_inst[31:20] == 12'hB0C | io_decode_0_inst[31:20] == 12'hC0C | io_decode_0_inst[31:20] == 12'h32D | io_decode_0_inst[31:20] == 12'hB0D | io_decode_0_inst[31:20] == 12'hC0D | io_decode_0_inst[31:20] == 12'h32E | io_decode_0_inst[31:20] == 12'hB0E
    | io_decode_0_inst[31:20] == 12'hC0E | io_decode_0_inst[31:20] == 12'h32F | io_decode_0_inst[31:20] == 12'hB0F | io_decode_0_inst[31:20] == 12'hC0F | io_decode_0_inst[31:20] == 12'h330 | io_decode_0_inst[31:20] == 12'hB10 | io_decode_0_inst[31:20] == 12'hC10 | io_decode_0_inst[31:20] == 12'h331 | io_decode_0_inst[31:20] == 12'hB11 | io_decode_0_inst[31:20] == 12'hC11 | io_decode_0_inst[31:20] == 12'h332 | io_decode_0_inst[31:20] == 12'hB12 | io_decode_0_inst[31:20] == 12'hC12 | io_decode_0_inst[31:20] == 12'h333 | io_decode_0_inst[31:20] == 12'hB13 | io_decode_0_inst[31:20] == 12'hC13 | io_decode_0_inst[31:20] == 12'h334 | io_decode_0_inst[31:20] == 12'hB14 | io_decode_0_inst[31:20] == 12'hC14 | io_decode_0_inst[31:20] == 12'h335 | io_decode_0_inst[31:20] == 12'hB15 | io_decode_0_inst[31:20] == 12'hC15 | io_decode_0_inst[31:20] == 12'h336 | io_decode_0_inst[31:20] == 12'hB16 | io_decode_0_inst[31:20] == 12'hC16 | io_decode_0_inst[31:20] == 12'h337 | io_decode_0_inst[31:20] == 12'hB17 | io_decode_0_inst[31:20] == 12'hC17 | io_decode_0_inst[31:20] == 12'h338 | io_decode_0_inst[31:20] == 12'hB18 | io_decode_0_inst[31:20] == 12'hC18 | io_decode_0_inst[31:20] == 12'h339 | io_decode_0_inst[31:20] == 12'hB19 | io_decode_0_inst[31:20] == 12'hC19 | io_decode_0_inst[31:20] == 12'h33A | io_decode_0_inst[31:20] == 12'hB1A | io_decode_0_inst[31:20] == 12'hC1A | io_decode_0_inst[31:20] == 12'h33B | io_decode_0_inst[31:20] == 12'hB1B | io_decode_0_inst[31:20] == 12'hC1B | io_decode_0_inst[31:20] == 12'h33C | io_decode_0_inst[31:20] == 12'hB1C | io_decode_0_inst[31:20] == 12'hC1C | io_decode_0_inst[31:20] == 12'h33D | io_decode_0_inst[31:20] == 12'hB1D | io_decode_0_inst[31:20] == 12'hC1D | io_decode_0_inst[31:20] == 12'h33E | io_decode_0_inst[31:20] == 12'hB1E | io_decode_0_inst[31:20] == 12'hC1E | io_decode_0_inst[31:20] == 12'h33F | io_decode_0_inst[31:20] == 12'hB1F | io_decode_0_inst[31:20] == 12'hC1F | io_decode_0_inst[31:20] == 12'hC00 | io_decode_0_inst[31:20] == 12'hC02 | io_decode_0_inst[31:20] == 12'h3A0
    | io_decode_0_inst[31:20] == 12'h3A2 | io_decode_0_inst[31:20] == 12'h3B0 | io_decode_0_inst[31:20] == 12'h3B1 | io_decode_0_inst[31:20] == 12'h3B2 | io_decode_0_inst[31:20] == 12'h3B3 | io_decode_0_inst[31:20] == 12'h3B4 | io_decode_0_inst[31:20] == 12'h3B5 | io_decode_0_inst[31:20] == 12'h3B6 | io_decode_0_inst[31:20] == 12'h3B7 | io_decode_0_inst[31:20] == 12'h3B8 | io_decode_0_inst[31:20] == 12'h3B9 | io_decode_0_inst[31:20] == 12'h3BA | io_decode_0_inst[31:20] == 12'h3BB | io_decode_0_inst[31:20] == 12'h3BC | io_decode_0_inst[31:20] == 12'h3BD | io_decode_0_inst[31:20] == 12'h3BE | io_decode_0_inst[31:20] == 12'h3BF | io_decode_0_inst[31:20] == 12'h7C1 | io_decode_0_inst[31:20] == 12'hF12 | io_decode_0_inst[31:20] == 12'hF11 | io_decode_0_inst[31:20] == 12'hF13;	// @[CSR.scala:839:27, :841:{93,111}, :873:25, package.scala:205:47]
  wire [5:0]  _GEN_10 = ~(io_decode_0_inst[31:26]);	// @[CSR.scala:839:27, pla.scala:78:21]
  wire [11:0] io_decode_0_write_flush_addr_m = io_decode_0_inst[31:20] | 12'h300;	// @[CSR.scala:839:27, :873:25]
  wire [63:0] cause = insn_call ? 64'hB : insn_break ? 64'h3 : io_cause;	// @[CSR.scala:835:83, :900:8, :901:14]
  wire        _causeIsDebugTrigger_T_2 = cause[7:0] == 8'hE;	// @[CSR.scala:900:8, :902:25, :903:53]
  wire        causeIsDebugInt = cause[63] & _causeIsDebugTrigger_T_2;	// @[CSR.scala:900:8, :903:{30,39,53}]
  wire        causeIsDebugTrigger = ~(cause[63]) & _causeIsDebugTrigger_T_2;	// @[CSR.scala:900:8, :903:{30,53}, :904:{29,44}]
  wire        trapToDebug = reg_singleStepped | causeIsDebugInt | causeIsDebugTrigger | ~(cause[63]) & insn_break & reg_dcsr_ebreakm | reg_debug;	// @[CSR.scala:381:25, :453:26, :457:30, :835:83, :900:8, :903:{30,39}, :904:44, :905:{27,56}, :906:119]
  wire        _exception_T = insn_call | insn_break;	// @[CSR.scala:835:83, :940:24]
  assign _io_singleStep_output = reg_dcsr_step & ~reg_debug;	// @[CSR.scala:381:25, :453:26, :868:45, :941:34]
  wire        _io_trace_0_exception_output = _exception_T | io_exception;	// @[CSR.scala:940:24, :960:43]
  wire        _T_375 = io_rw_addr[10] & io_rw_addr[7];	// @[CSR.scala:1072:{43,48,61}]
  wire        _io_csr_stall_output = reg_wfi | io_status_cease_r;	// @[CSR.scala:542:54, :1099:27, Reg.scala:35:20]
  wire [31:0] _io_rw_rdata_T_14 = (&_decoded_decoded_T_122) ? {16'h4000, reg_dcsr_ebreakm, 6'h0, reg_dcsr_cause, 3'h0, reg_dcsr_step, 2'h3} : 32'h0;	// @[CSR.scala:369:47, :381:25, :611:32, :632:27, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [2:0]  _io_rw_rdata_T_17 = (&_decoded_decoded_T_8) ? reg_mcountinhibit : 3'h0;	// @[CSR.scala:551:34, :611:32, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_111 = (&_decoded_decoded_T_82) ? reg_pmp_0_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_112 = (&_decoded_decoded_T_84) ? reg_pmp_1_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_113 = (&_decoded_decoded_T_86) ? reg_pmp_2_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_114 = (&_decoded_decoded_T_88) ? reg_pmp_3_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_115 = (&_decoded_decoded_T_90) ? reg_pmp_4_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_116 = (&_decoded_decoded_T_92) ? reg_pmp_5_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_117 = (&_decoded_decoded_T_94) ? reg_pmp_6_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [29:0] _io_rw_rdata_T_118 = (&_decoded_decoded_T_96) ? reg_pmp_7_addr : 30'h0;	// @[CSR.scala:464:20, Cat.scala:33:92, Mux.scala:27:73, pla.scala:98:74]
  wire [14:0] _GEN_11 = ((&{io_rw_addr[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], io_rw_addr[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], decoded_decoded_invInputs[10], decoded_decoded_invInputs[11]}) ? {4'h0, io_interrupts_meip, 10'h0} : 15'h0) | _io_rw_rdata_T_14[15:1];	// @[CSR.scala:571:22, Cat.scala:33:92, Mux.scala:27:73, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign _io_rw_rdata_WIRE =
    ((&_decoded_decoded_T_116) ? {4'h2, reg_bp_0_control_dmode, 46'h40000000000, reg_bp_0_control_action, reg_bp_0_control_chain, 2'h0, reg_bp_0_control_tmatch, 4'h8, reg_bp_0_control_x, reg_bp_0_control_w, reg_bp_0_control_r} : 64'h0) | ((&_decoded_decoded_T_118) ? {{31{reg_bp_0_address[32]}}, reg_bp_0_address} : 64'h0) | ((&_decoded_decoded_T_2) ? reg_misa : 64'h0) | ((&_decoded_decoded_T) ? {25'h0, reg_mstatus_gva, 30'h18, reg_mstatus_mpie, 3'h0, reg_mstatus_mie, 3'h0} : 64'h0) | ((&_decoded_decoded_T_6) ? {32'h0, _read_mtvec_T_5} : 64'h0) | ((&_decoded_decoded_T_4) ? reg_mie : 64'h0) | ((&_decoded_decoded_T_68) ? reg_mscratch : 64'h0) | ((&_decoded_decoded_T_70) ? {{30{_T_30[33]}}, _T_30} : 64'h0) | ((&_decoded_decoded_T_74) ? {{30{reg_mtval[33]}}, reg_mtval} : 64'h0) | ((&_decoded_decoded_T_72) ? reg_mcause : 64'h0) | ((&_decoded_decoded_T_124) ? {{30{_T_44[33]}}, _T_44} : 64'h0) | ((&_decoded_decoded_T_126) ? reg_dscratch0 : 64'h0) | ((&_decoded_decoded_T_130) ? value_1 : 64'h0) | ((&_decoded_decoded_T_132) ? value : 64'h0) | ((&{decoded_decoded_invInputs[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], io_rw_addr[10], io_rw_addr[11]}) ? value_1 : 64'h0) | ((&{decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], decoded_decoded_invInputs[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], decoded_decoded_invInputs[8], decoded_decoded_invInputs[9], io_rw_addr[10], io_rw_addr[11]}) ? value : 64'h0)
    | ((&_decoded_decoded_T_78) ? {reg_pmp_7_cfg_l, 2'h0, reg_pmp_7_cfg_a, reg_pmp_7_cfg_x, reg_pmp_7_cfg_w, reg_pmp_7_cfg_r, reg_pmp_6_cfg_l, 2'h0, reg_pmp_6_cfg_a, reg_pmp_6_cfg_x, reg_pmp_6_cfg_w, reg_pmp_6_cfg_r, reg_pmp_5_cfg_l, 2'h0, reg_pmp_5_cfg_a, reg_pmp_5_cfg_x, reg_pmp_5_cfg_w, reg_pmp_5_cfg_r, reg_pmp_4_cfg_l, 2'h0, reg_pmp_4_cfg_a, reg_pmp_4_cfg_x, reg_pmp_4_cfg_w, reg_pmp_4_cfg_r, reg_pmp_3_cfg_l, 2'h0, reg_pmp_3_cfg_a, reg_pmp_3_cfg_x, reg_pmp_3_cfg_w, reg_pmp_3_cfg_r, reg_pmp_2_cfg_l, 2'h0, reg_pmp_2_cfg_a, reg_pmp_2_cfg_x, reg_pmp_2_cfg_w, reg_pmp_2_cfg_r, reg_pmp_1_cfg_l, 2'h0, reg_pmp_1_cfg_a, reg_pmp_1_cfg_x, reg_pmp_1_cfg_w, reg_pmp_1_cfg_r, reg_pmp_0_cfg_l, 2'h0, reg_pmp_0_cfg_a, reg_pmp_0_cfg_x, reg_pmp_0_cfg_w, reg_pmp_0_cfg_r} : 64'h0) | ((&_decoded_decoded_T_128) ? reg_custom_0 : 64'h0)
    | {32'h0, _io_rw_rdata_T_14[31:30], _io_rw_rdata_T_111[29:16] | _io_rw_rdata_T_112[29:16] | _io_rw_rdata_T_113[29:16] | _io_rw_rdata_T_114[29:16] | _io_rw_rdata_T_115[29:16] | _io_rw_rdata_T_116[29:16] | _io_rw_rdata_T_117[29:16] | _io_rw_rdata_T_118[29:16], _GEN_11[14:2] | _io_rw_rdata_T_111[15:3] | _io_rw_rdata_T_112[15:3] | _io_rw_rdata_T_113[15:3] | _io_rw_rdata_T_114[15:3] | _io_rw_rdata_T_115[15:3] | _io_rw_rdata_T_116[15:3] | _io_rw_rdata_T_117[15:3] | _io_rw_rdata_T_118[15:3], _GEN_11[1:0] | _io_rw_rdata_T_17[2:1] | _io_rw_rdata_T_111[2:1] | _io_rw_rdata_T_112[2:1] | _io_rw_rdata_T_113[2:1] | _io_rw_rdata_T_114[2:1] | _io_rw_rdata_T_115[2:1] | _io_rw_rdata_T_116[2:1] | _io_rw_rdata_T_117[2:1] | _io_rw_rdata_T_118[2:1], (&{io_rw_addr[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]}) & io_hartid | _io_rw_rdata_T_14[0] | _io_rw_rdata_T_17[0] | _io_rw_rdata_T_111[0] | _io_rw_rdata_T_112[0] | _io_rw_rdata_T_113[0] | _io_rw_rdata_T_114[0] | _io_rw_rdata_T_115[0] | _io_rw_rdata_T_116[0] | _io_rw_rdata_T_117[0] | _io_rw_rdata_T_118[0] | (&{decoded_decoded_invInputs[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]})} | ((&{io_rw_addr[0], io_rw_addr[1], decoded_decoded_invInputs[2], decoded_decoded_invInputs[3], io_rw_addr[4], decoded_decoded_invInputs[5], decoded_decoded_invInputs[6], decoded_decoded_invInputs[7], io_rw_addr[8], io_rw_addr[9], io_rw_addr[10], io_rw_addr[11]}) ? 64'h20181004 : 64'h0);	// @[Bitwise.scala:77:12, CSR.scala:369:47, :373:28, :455:26, :463:19, :464:20, :466:20, :477:27, :478:22, :480:25, :610:25, :611:32, :617:48, :753:43, :1408:67, :1583:26, Cat.scala:33:92, Mux.scala:27:73, :47:70, package.scala:124:38, :155:13, :166:35, pla.scala:78:21, :90:45, :91:29, :98:74]
  wire        csr_wen = io_rw_cmd == 3'h6 | (&io_rw_cmd) | io_rw_cmd == 3'h5;	// @[Mux.scala:47:70, package.scala:16:47, :73:59]
  wire [47:0] _GEN_12 = ((io_rw_cmd[1] ? {reg_bp_0_control_dmode, 46'h40000000000, reg_bp_0_control_action} : 48'h0) | io_rw_wdata[59:12]) & ~((&(io_rw_cmd[1:0])) ? io_rw_wdata[59:12] : 48'h0);	// @[CSR.scala:463:19, :1408:67, :1561:{9,13,30,39,41,45,49,55}]
  wire        dMode = _GEN_12[47] & reg_debug;	// @[CSR.scala:453:26, :1408:96, :1409:38, :1561:39]
  wire [6:0]  nextSmall = {1'h0, small_0} + {6'h0, io_retire};	// @[Counters.scala:45:41, :46:33]
  wire [33:0] _epc_T_1 = ~io_pc | 34'h1;	// @[CSR.scala:1582:{28,31}]
  wire        _GEN_13 = _io_trace_0_exception_output & trapToDebug & ~reg_debug;	// @[CSR.scala:453:26, :868:45, :906:119, :960:43, :975:20, :976:24, :977:25, :979:19]
  wire        _GEN_14 = ~_io_trace_0_exception_output | trapToDebug;	// @[CSR.scala:373:28, :906:119, :960:43, :975:20, :976:24]
  wire [33:0] _GEN_15 = ~(_reg_bp_0_control_WIRE_1[33:0]) | 34'h1;	// @[CSR.scala:1561:39, :1582:{28,31}]
  wire        _T_1617 = ~reg_bp_0_control_dmode | reg_debug;	// @[CSR.scala:453:26, :463:19, :1389:{39,57}]
  wire        _GEN_16 = csr_wen & _T_1617 & (&_decoded_decoded_T_116);	// @[CSR.scala:463:19, :1162:18, :1389:{57,72}, :1401:44, :1402:24, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_17 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_0_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_18 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_1_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_19 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_2_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_20 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_3_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_21 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_4_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_22 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_5_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_23 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_6_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  wire        _GEN_24 = csr_wen & (&_decoded_decoded_T_78) & ~reg_pmp_7_cfg_l;	// @[CSR.scala:464:20, :1162:18, :1421:{60,76}, :1423:17, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
  always @(posedge clock) begin
    if (reset) begin
      reg_mstatus_gva <= 1'h0;	// @[CSR.scala:373:28]
      reg_mstatus_mpie <= 1'h0;	// @[CSR.scala:373:28]
      reg_mstatus_mie <= 1'h0;	// @[CSR.scala:373:28]
      reg_dcsr_ebreakm <= 1'h0;	// @[CSR.scala:381:25]
      reg_dcsr_cause <= 3'h0;	// @[CSR.scala:381:25, :611:32]
      reg_dcsr_step <= 1'h0;	// @[CSR.scala:381:25]
      reg_debug <= 1'h0;	// @[CSR.scala:453:26]
      reg_bp_0_control_dmode <= 1'h0;	// @[CSR.scala:463:19]
      reg_bp_0_control_action <= 1'h0;	// @[CSR.scala:463:19]
      reg_bp_0_control_x <= 1'h0;	// @[CSR.scala:463:19]
      reg_bp_0_control_w <= 1'h0;	// @[CSR.scala:463:19]
      reg_bp_0_control_r <= 1'h0;	// @[CSR.scala:463:19]
      reg_pmp_0_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_0_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_1_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_1_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_2_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_2_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_3_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_3_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_4_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_4_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_5_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_5_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_6_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_6_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_pmp_7_cfg_l <= 1'h0;	// @[CSR.scala:464:20]
      reg_pmp_7_cfg_a <= 2'h0;	// @[CSR.scala:464:20]
      reg_mcause <= 64'h0;	// @[CSR.scala:477:27]
      reg_mtvec <= 32'h0;	// @[CSR.scala:369:47, :483:31]
      reg_mcountinhibit <= 3'h0;	// @[CSR.scala:551:34, :611:32]
      small_0 <= 6'h0;	// @[Counters.scala:45:41]
      large_0 <= 58'h0;	// @[Counters.scala:50:31]
      reg_misa <= 64'h8000000000801105;	// @[CSR.scala:610:25]
      reg_custom_0 <= 64'h208;	// @[CSR.scala:753:43]
      io_status_cease_r <= 1'h0;	// @[Reg.scala:35:20]
    end
    else begin
      if (_GEN_14) begin	// @[CSR.scala:373:28, :975:20, :976:24]
      end
      else	// @[CSR.scala:373:28, :975:20, :976:24]
        reg_mstatus_gva <= io_gva;	// @[CSR.scala:373:28]
      if (csr_wen & (&_decoded_decoded_T)) begin	// @[CSR.scala:1053:19, :1162:18, :1166:39, :1168:23, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mstatus_mpie <= _reg_bp_0_control_WIRE_1[7];	// @[CSR.scala:373:28, :1167:39, :1561:39]
        reg_mstatus_mie <= _reg_bp_0_control_WIRE_1[3];	// @[CSR.scala:373:28, :1167:39, :1561:39]
      end
      else begin	// @[CSR.scala:1053:19, :1162:18, :1166:39, :1168:23]
        reg_mstatus_mpie <= insn_ret & ~_T_375 | (_GEN_14 ? reg_mstatus_mpie : reg_mstatus_mie);	// @[CSR.scala:373:28, :835:83, :975:20, :976:24, :1053:19, :1055:48, :1072:{48,66}, :1077:65]
        if (~insn_ret | _T_375)	// @[CSR.scala:835:83, :975:20, :1053:19, :1055:48, :1072:48]
          reg_mstatus_mie <= _GEN_14 & reg_mstatus_mie;	// @[CSR.scala:373:28, :975:20, :976:24]
        else	// @[CSR.scala:975:20, :1053:19, :1055:48]
          reg_mstatus_mie <= reg_mstatus_mpie;	// @[CSR.scala:373:28]
      end
      if (csr_wen & (&_decoded_decoded_T_122)) begin	// @[CSR.scala:381:25, :1162:18, :1259:38, :1261:23, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_dcsr_ebreakm <= _reg_bp_0_control_WIRE_1[15];	// @[CSR.scala:381:25, :1260:38, :1561:39]
        reg_dcsr_step <= _reg_bp_0_control_WIRE_1[2];	// @[CSR.scala:381:25, :1260:38, :1561:39]
      end
      if (_GEN_13) begin	// @[CSR.scala:453:26, :975:20, :976:24, :977:25, :979:19]
        if (reg_singleStepped)	// @[CSR.scala:457:30]
          reg_dcsr_cause <= 3'h4;	// @[CSR.scala:381:25, Mux.scala:47:70]
        else	// @[CSR.scala:457:30]
          reg_dcsr_cause <= {1'h0, causeIsDebugInt ? 2'h3 : causeIsDebugTrigger ? 2'h2 : 2'h1};	// @[CSR.scala:381:25, :903:39, :904:44, :981:{30,58,90}, :1584:39, Cat.scala:33:92]
      end
      reg_debug <= ~(insn_ret & _T_375) & (_GEN_13 | reg_debug);	// @[CSR.scala:453:26, :835:83, :975:20, :976:24, :977:25, :979:19, :1053:19, :1055:48, :1072:{48,66}, :1075:17]
      if (_GEN_16) begin	// @[CSR.scala:463:19, :1162:18, :1389:72, :1401:44, :1402:24]
        reg_bp_0_control_dmode <= dMode;	// @[CSR.scala:463:19, :1409:38]
        reg_bp_0_control_action <= dMode & _GEN_12[0];	// @[CSR.scala:463:19, :1408:96, :1409:38, :1411:{51,71,120}, :1561:39]
        reg_bp_0_control_x <= _reg_bp_0_control_WIRE_1[2];	// @[CSR.scala:463:19, :1402:41, :1561:39]
        reg_bp_0_control_w <= _reg_bp_0_control_WIRE_1[1];	// @[CSR.scala:463:19, :1402:41, :1561:39]
        reg_bp_0_control_r <= _reg_bp_0_control_WIRE_1[0];	// @[CSR.scala:463:19, :1402:41, :1561:39]
      end
      if (_GEN_17) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_0_cfg_l <= _reg_bp_0_control_WIRE_1[7];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_0_cfg_a <= _reg_bp_0_control_WIRE_1[4:3];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_18) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_1_cfg_l <= _reg_bp_0_control_WIRE_1[15];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_1_cfg_a <= _reg_bp_0_control_WIRE_1[12:11];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_19) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_2_cfg_l <= _reg_bp_0_control_WIRE_1[23];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_2_cfg_a <= _reg_bp_0_control_WIRE_1[20:19];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_20) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_3_cfg_l <= _reg_bp_0_control_WIRE_1[31];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_3_cfg_a <= _reg_bp_0_control_WIRE_1[28:27];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_21) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_4_cfg_l <= _reg_bp_0_control_WIRE_1[39];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_4_cfg_a <= _reg_bp_0_control_WIRE_1[36:35];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_22) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_5_cfg_l <= _reg_bp_0_control_WIRE_1[47];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_5_cfg_a <= _reg_bp_0_control_WIRE_1[44:43];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_23) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_6_cfg_l <= _reg_bp_0_control_WIRE_1[55];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_6_cfg_a <= _reg_bp_0_control_WIRE_1[52:51];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (_GEN_24) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
        reg_pmp_7_cfg_l <= _reg_bp_0_control_WIRE_1[63];	// @[CSR.scala:464:20, :1422:73, :1561:39]
        reg_pmp_7_cfg_a <= _reg_bp_0_control_WIRE_1[60:59];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      end
      if (csr_wen & (&_decoded_decoded_T_72))	// @[CSR.scala:975:20, :1162:18, :1224:{40,53}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mcause <= _reg_bp_0_control_WIRE_1 & 64'h800000000000000F;	// @[CSR.scala:477:27, :1224:62, :1561:39]
      else if (_GEN_14) begin	// @[CSR.scala:373:28, :975:20, :976:24]
      end
      else if (insn_call)	// @[CSR.scala:835:83]
        reg_mcause <= 64'hB;	// @[CSR.scala:477:27, :900:8]
      else if (insn_break)	// @[CSR.scala:835:83]
        reg_mcause <= 64'h3;	// @[CSR.scala:477:27, :901:14]
      else	// @[CSR.scala:835:83]
        reg_mcause <= io_cause;	// @[CSR.scala:477:27]
      if (csr_wen & (&_decoded_decoded_T_6))	// @[CSR.scala:483:31, :1162:18, :1223:{40,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mtvec <= _reg_bp_0_control_WIRE_1[31:0];	// @[CSR.scala:483:31, :1223:52, :1561:39]
      if (csr_wen & (&_decoded_decoded_T_8))	// @[CSR.scala:551:34, :1162:18, :1244:{47,67}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_mcountinhibit <= _reg_bp_0_control_WIRE_1[2:0] & 3'h5;	// @[CSR.scala:551:34, :1244:76, :1561:39, Mux.scala:47:70]
      if (csr_wen & (&_decoded_decoded_T_132)) begin	// @[CSR.scala:1162:18, :1579:31, Cat.scala:33:92, Counters.scala:47:19, :67:11, package.scala:73:59, pla.scala:98:74]
        small_0 <= _reg_bp_0_control_WIRE_1[5:0];	// @[CSR.scala:1561:39, Counters.scala:45:41, :67:11]
        large_0 <= _reg_bp_0_control_WIRE_1[63:6];	// @[CSR.scala:1561:39, Counters.scala:50:31, :68:28]
      end
      else begin	// @[CSR.scala:1162:18, :1579:31, Counters.scala:47:19, :67:11]
        if (reg_mcountinhibit[2]) begin	// @[CSR.scala:551:34, :553:75]
        end
        else	// @[CSR.scala:553:75]
          small_0 <= nextSmall[5:0];	// @[Counters.scala:45:41, :46:33, :47:27]
        if (nextSmall[6] & ~(reg_mcountinhibit[2]))	// @[CSR.scala:551:34, :553:75, Counters.scala:46:33, :47:9, :51:{20,33}]
          large_0 <= large_0 + 58'h1;	// @[Counters.scala:50:31, :51:55]
      end
      if (csr_wen & (&_decoded_decoded_T_2) & (~(io_pc[1]) | _reg_bp_0_control_WIRE_1[2]))	// @[CSR.scala:610:25, :1162:18, :1195:36, :1199:{35,41,45,53,66}, :1201:20, :1561:39, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_misa <= ~(~_reg_bp_0_control_WIRE_1 | {60'h0, ~(_reg_bp_0_control_WIRE_1[5]), 3'h0}) & 64'h1005 | reg_misa & 64'hFFFFFFFFFFFFEFFA;	// @[CSR.scala:610:25, :611:32, :1197:20, :1201:{23,25,32,35,55,62,73,75}, :1561:39]
      if (csr_wen & (&_decoded_decoded_T_128))	// @[CSR.scala:753:43, :1162:18, :1436:35, :1437:13, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
        reg_custom_0 <= _reg_bp_0_control_WIRE_1 & 64'h208 | reg_custom_0 & 64'hFFFFFFFFFFFFFDF7;	// @[CSR.scala:753:43, :1437:{23,31,38,40}, :1561:39]
      io_status_cease_r <= system_insn & (&{io_rw_addr[2], _GEN_8[3], _GEN_8[4], _GEN_8[5], _GEN_8[6], _GEN_8[7], io_rw_addr[8], io_rw_addr[9], _GEN_8[10], _GEN_8[11]}) | io_status_cease_r;	// @[CSR.scala:818:31, :835:83, Cat.scala:33:92, Reg.scala:35:20, :36:{18,22}, pla.scala:78:21, :90:45, :91:29, :98:74]
    end
    if (csr_wen & (&_decoded_decoded_T_124))	// @[CSR.scala:975:20, :1162:18, :1268:{42,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_dpc <= ~_GEN_15;	// @[CSR.scala:454:20, :1582:{26,31}]
    else if (_GEN_13)	// @[CSR.scala:453:26, :975:20, :976:24, :977:25, :979:19]
      reg_dpc <= ~_epc_T_1;	// @[CSR.scala:454:20, :1582:{26,31}]
    if (csr_wen & (&_decoded_decoded_T_126))	// @[CSR.scala:455:26, :1162:18, :1269:{43,59}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_dscratch0 <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:455:26, :1561:39]
    reg_singleStepped <= _io_singleStep_output & (io_retire | _io_trace_0_exception_output | reg_singleStepped);	// @[CSR.scala:457:30, :941:34, :960:43, :967:{36,56}, :968:{25,45}]
    reg_bp_0_control_chain <= ~(reset | _GEN_16) & reg_bp_0_control_chain;	// @[CSR.scala:463:19, :1162:18, :1389:72, :1401:44, :1402:24, :1412:30, :1517:25, :1520:17]
    if (_GEN_16)	// @[CSR.scala:463:19, :1162:18, :1389:72, :1401:44, :1402:24]
      reg_bp_0_control_tmatch <= _reg_bp_0_control_WIRE_1[8:7];	// @[CSR.scala:463:19, :1402:41, :1561:39]
    if (csr_wen & _T_1617 & (&_decoded_decoded_T_118))	// @[CSR.scala:463:19, :1162:18, :1389:{57,72}, :1390:{44,57}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_bp_0_address <= _reg_bp_0_control_WIRE_1[32:0];	// @[CSR.scala:463:19, :1390:57, :1561:39]
    if (_GEN_17) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_0_cfg_x <= _reg_bp_0_control_WIRE_1[2];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_0_cfg_w <= _reg_bp_0_control_WIRE_1[1] & _reg_bp_0_control_WIRE_1[0];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_0_cfg_r <= _reg_bp_0_control_WIRE_1[0];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_82) & ~(reg_pmp_0_cfg_l | reg_pmp_1_cfg_l & ~(reg_pmp_1_cfg_a[1]) & reg_pmp_1_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_0_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_18) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_1_cfg_x <= _reg_bp_0_control_WIRE_1[10];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_1_cfg_w <= _reg_bp_0_control_WIRE_1[9] & _reg_bp_0_control_WIRE_1[8];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_1_cfg_r <= _reg_bp_0_control_WIRE_1[8];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_84) & ~(reg_pmp_1_cfg_l | reg_pmp_2_cfg_l & ~(reg_pmp_2_cfg_a[1]) & reg_pmp_2_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_1_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_19) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_2_cfg_x <= _reg_bp_0_control_WIRE_1[18];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_2_cfg_w <= _reg_bp_0_control_WIRE_1[17] & _reg_bp_0_control_WIRE_1[16];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_2_cfg_r <= _reg_bp_0_control_WIRE_1[16];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_86) & ~(reg_pmp_2_cfg_l | reg_pmp_3_cfg_l & ~(reg_pmp_3_cfg_a[1]) & reg_pmp_3_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_2_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_20) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_3_cfg_x <= _reg_bp_0_control_WIRE_1[26];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_3_cfg_w <= _reg_bp_0_control_WIRE_1[25] & _reg_bp_0_control_WIRE_1[24];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_3_cfg_r <= _reg_bp_0_control_WIRE_1[24];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_88) & ~(reg_pmp_3_cfg_l | reg_pmp_4_cfg_l & ~(reg_pmp_4_cfg_a[1]) & reg_pmp_4_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_3_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_21) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_4_cfg_x <= _reg_bp_0_control_WIRE_1[34];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_4_cfg_w <= _reg_bp_0_control_WIRE_1[33] & _reg_bp_0_control_WIRE_1[32];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_4_cfg_r <= _reg_bp_0_control_WIRE_1[32];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_90) & ~(reg_pmp_4_cfg_l | reg_pmp_5_cfg_l & ~(reg_pmp_5_cfg_a[1]) & reg_pmp_5_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_4_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_22) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_5_cfg_x <= _reg_bp_0_control_WIRE_1[42];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_5_cfg_w <= _reg_bp_0_control_WIRE_1[41] & _reg_bp_0_control_WIRE_1[40];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_5_cfg_r <= _reg_bp_0_control_WIRE_1[40];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_92) & ~(reg_pmp_5_cfg_l | reg_pmp_6_cfg_l & ~(reg_pmp_6_cfg_a[1]) & reg_pmp_6_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_5_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_23) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_6_cfg_x <= _reg_bp_0_control_WIRE_1[50];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_6_cfg_w <= _reg_bp_0_control_WIRE_1[49] & _reg_bp_0_control_WIRE_1[48];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_6_cfg_r <= _reg_bp_0_control_WIRE_1[48];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_94) & ~(reg_pmp_6_cfg_l | reg_pmp_7_cfg_l & ~(reg_pmp_7_cfg_a[1]) & reg_pmp_7_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_6_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (_GEN_24) begin	// @[CSR.scala:464:20, :1162:18, :1421:76, :1423:17]
      reg_pmp_7_cfg_x <= _reg_bp_0_control_WIRE_1[58];	// @[CSR.scala:464:20, :1422:73, :1561:39]
      reg_pmp_7_cfg_w <= _reg_bp_0_control_WIRE_1[57] & _reg_bp_0_control_WIRE_1[56];	// @[CSR.scala:464:20, :1422:73, :1425:31, :1561:39]
      reg_pmp_7_cfg_r <= _reg_bp_0_control_WIRE_1[56];	// @[CSR.scala:464:20, :1422:73, :1561:39]
    end
    if (csr_wen & (&_decoded_decoded_T_96) & ~(reg_pmp_7_cfg_l | reg_pmp_7_cfg_l & ~(reg_pmp_7_cfg_a[1]) & reg_pmp_7_cfg_a[0]))	// @[CSR.scala:464:20, :1162:18, :1430:{48,71}, :1431:18, Cat.scala:33:92, PMP.scala:45:20, :46:26, :47:13, :49:{44,62}, package.scala:73:59, pla.scala:98:74]
      reg_pmp_7_addr <= _reg_bp_0_control_WIRE_1[29:0];	// @[CSR.scala:464:20, :1431:18, :1561:39]
    if (csr_wen & (&_decoded_decoded_T_4))	// @[CSR.scala:466:20, :1162:18, :1219:{40,50}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mie <= _reg_bp_0_control_WIRE_1 & 64'h888;	// @[CSR.scala:466:20, :1219:59, :1561:39]
    if (csr_wen & (&_decoded_decoded_T_70))	// @[CSR.scala:975:20, :1162:18, :1220:{40,51}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mepc <= ~_GEN_15;	// @[CSR.scala:476:21, :1582:{26,31}]
    else if (_GEN_14) begin	// @[CSR.scala:373:28, :975:20, :976:24]
    end
    else	// @[CSR.scala:373:28, :975:20, :976:24]
      reg_mepc <= ~_epc_T_1;	// @[CSR.scala:476:21, :1582:{26,31}]
    if (csr_wen & (&_decoded_decoded_T_74))	// @[CSR.scala:975:20, :1162:18, :1225:{40,52}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mtval <= _reg_bp_0_control_WIRE_1[33:0];	// @[CSR.scala:478:22, :1561:39]
    else if (_GEN_14) begin	// @[CSR.scala:373:28, :975:20, :976:24]
    end
    else if (insn_break)	// @[CSR.scala:835:83]
      reg_mtval <= ~_epc_T_1;	// @[CSR.scala:478:22, :1582:{26,31}]
    else	// @[CSR.scala:835:83]
      reg_mtval <= io_tval;	// @[CSR.scala:478:22]
    if (csr_wen & (&_decoded_decoded_T_68))	// @[CSR.scala:480:25, :1162:18, :1221:{40,55}, Cat.scala:33:92, package.scala:73:59, pla.scala:98:74]
      reg_mscratch <= _reg_bp_0_control_WIRE_1;	// @[CSR.scala:480:25, :1561:39]
  end // always @(posedge)
  wire [6:0]  nextSmall_1 = {1'h0, small_1} + {6'h0, ~_io_csr_stall_output};	// @[CSR.scala:555:56, :1099:27, Counters.scala:45:41, :46:33]
  always @(posedge io_ungated_clock) begin
    if (reset) begin
      reg_wfi <= 1'h0;	// @[CSR.scala:542:54]
      small_1 <= 6'h0;	// @[Counters.scala:45:41]
      large_1 <= 58'h0;	// @[Counters.scala:50:31]
    end
    else begin
      reg_wfi <= ~(_T_247 | io_interrupts_debug | _io_trace_0_exception_output) & (system_insn & (&{io_rw_addr[8], _GEN_8[9], _GEN_8[10], _GEN_8[11]}) & ~_io_singleStep_output & ~reg_debug | reg_wfi);	// @[CSR.scala:453:26, :542:54, :575:56, :587:36, :818:31, :868:45, :941:34, :960:43, :963:{36,51,61}, :964:{55,69,79}, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
      if (csr_wen & (&_decoded_decoded_T_130)) begin	// @[CSR.scala:1162:18, :1579:31, Cat.scala:33:92, Counters.scala:47:19, :67:11, package.scala:73:59, pla.scala:98:74]
        small_1 <= _reg_bp_0_control_WIRE_1[5:0];	// @[CSR.scala:1561:39, Counters.scala:45:41, :67:11]
        large_1 <= _reg_bp_0_control_WIRE_1[63:6];	// @[CSR.scala:1561:39, Counters.scala:50:31, :68:28]
      end
      else begin	// @[CSR.scala:1162:18, :1579:31, Counters.scala:47:19, :67:11]
        if (reg_mcountinhibit[0]) begin	// @[CSR.scala:551:34, :552:40]
        end
        else	// @[CSR.scala:552:40]
          small_1 <= nextSmall_1[5:0];	// @[Counters.scala:45:41, :46:33, :47:27]
        if (nextSmall_1[6] & ~(reg_mcountinhibit[0]))	// @[CSR.scala:551:34, :552:40, Counters.scala:46:33, :47:9, :51:{20,33}]
          large_1 <= large_1 + 58'h1;	// @[Counters.scala:50:31, :51:55]
      end
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    wire  [2:0]  _T_238 = {1'h0, {1'h0, insn_ret} + {1'h0, insn_call}} + {1'h0, {1'h0, insn_break} + {1'h0, io_exception}};	// @[Bitwise.scala:51:90, CSR.scala:835:83]
    always @(posedge clock) begin	// @[CSR.scala:961:9]
      if (~reset & (|(_T_238[2:1]))) begin	// @[Bitwise.scala:51:90, CSR.scala:961:{9,79}]
        if (`ASSERT_VERBOSE_COND_)	// @[CSR.scala:961:9]
          $error("Assertion failed: these conditions must be mutually exclusive\n    at CSR.scala:961 assert(PopCount(insn_ret :: insn_call :: insn_break :: io.exception :: Nil) <= 1.U, \"these conditions must be mutually exclusive\")\n");	// @[CSR.scala:961:9]
        if (`STOP_COND_)	// @[CSR.scala:961:9]
          $fatal;	// @[CSR.scala:961:9]
      end
      if (~reset & ~(~reg_singleStepped | ~io_retire)) begin	// @[CSR.scala:457:30, :970:{9,10,29,42}]
        if (`ASSERT_VERBOSE_COND_)	// @[CSR.scala:970:9]
          $error("Assertion failed\n    at CSR.scala:970 assert(!reg_singleStepped || io.retire === 0.U)\n");	// @[CSR.scala:970:9]
        if (`STOP_COND_)	// @[CSR.scala:970:9]
          $fatal;	// @[CSR.scala:970:9]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    logic [31:0] _RANDOM_53;
    logic [31:0] _RANDOM_54;
    logic [31:0] _RANDOM_55;
    logic [31:0] _RANDOM_56;
    logic [31:0] _RANDOM_57;
    logic [31:0] _RANDOM_58;
    logic [31:0] _RANDOM_59;
    logic [31:0] _RANDOM_60;
    logic [31:0] _RANDOM_61;
    logic [31:0] _RANDOM_62;
    logic [31:0] _RANDOM_63;
    logic [31:0] _RANDOM_64;
    logic [31:0] _RANDOM_65;
    logic [31:0] _RANDOM_66;
    logic [31:0] _RANDOM_67;
    logic [31:0] _RANDOM_68;
    logic [31:0] _RANDOM_69;
    logic [31:0] _RANDOM_70;
    logic [31:0] _RANDOM_71;
    logic [31:0] _RANDOM_72;
    logic [31:0] _RANDOM_73;
    logic [31:0] _RANDOM_74;
    logic [31:0] _RANDOM_75;
    logic [31:0] _RANDOM_76;
    logic [31:0] _RANDOM_77;
    logic [31:0] _RANDOM_78;
    logic [31:0] _RANDOM_79;
    logic [31:0] _RANDOM_80;
    logic [31:0] _RANDOM_81;
    logic [31:0] _RANDOM_82;
    logic [31:0] _RANDOM_83;
    logic [31:0] _RANDOM_84;
    logic [31:0] _RANDOM_85;
    logic [31:0] _RANDOM_86;
    logic [31:0] _RANDOM_87;
    logic [31:0] _RANDOM_88;
    logic [31:0] _RANDOM_89;
    logic [31:0] _RANDOM_90;
    logic [31:0] _RANDOM_91;
    logic [31:0] _RANDOM_92;
    logic [31:0] _RANDOM_93;
    logic [31:0] _RANDOM_94;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        _RANDOM_53 = `RANDOM;
        _RANDOM_54 = `RANDOM;
        _RANDOM_55 = `RANDOM;
        _RANDOM_56 = `RANDOM;
        _RANDOM_57 = `RANDOM;
        _RANDOM_58 = `RANDOM;
        _RANDOM_59 = `RANDOM;
        _RANDOM_60 = `RANDOM;
        _RANDOM_61 = `RANDOM;
        _RANDOM_62 = `RANDOM;
        _RANDOM_63 = `RANDOM;
        _RANDOM_64 = `RANDOM;
        _RANDOM_65 = `RANDOM;
        _RANDOM_66 = `RANDOM;
        _RANDOM_67 = `RANDOM;
        _RANDOM_68 = `RANDOM;
        _RANDOM_69 = `RANDOM;
        _RANDOM_70 = `RANDOM;
        _RANDOM_71 = `RANDOM;
        _RANDOM_72 = `RANDOM;
        _RANDOM_73 = `RANDOM;
        _RANDOM_74 = `RANDOM;
        _RANDOM_75 = `RANDOM;
        _RANDOM_76 = `RANDOM;
        _RANDOM_77 = `RANDOM;
        _RANDOM_78 = `RANDOM;
        _RANDOM_79 = `RANDOM;
        _RANDOM_80 = `RANDOM;
        _RANDOM_81 = `RANDOM;
        _RANDOM_82 = `RANDOM;
        _RANDOM_83 = `RANDOM;
        _RANDOM_84 = `RANDOM;
        _RANDOM_85 = `RANDOM;
        _RANDOM_86 = `RANDOM;
        _RANDOM_87 = `RANDOM;
        _RANDOM_88 = `RANDOM;
        _RANDOM_89 = `RANDOM;
        _RANDOM_90 = `RANDOM;
        _RANDOM_91 = `RANDOM;
        _RANDOM_92 = `RANDOM;
        _RANDOM_93 = `RANDOM;
        _RANDOM_94 = `RANDOM;
        reg_mstatus_gva = _RANDOM_2[2];	// @[CSR.scala:373:28]
        reg_mstatus_mpie = _RANDOM_3[1];	// @[CSR.scala:373:28]
        reg_mstatus_mie = _RANDOM_3[5];	// @[CSR.scala:373:28]
        reg_dcsr_ebreakm = _RANDOM_3[25];	// @[CSR.scala:373:28, :381:25]
        reg_dcsr_cause = _RANDOM_4[2:0];	// @[CSR.scala:381:25]
        reg_dcsr_step = _RANDOM_4[6];	// @[CSR.scala:381:25]
        reg_debug = _RANDOM_4[9];	// @[CSR.scala:381:25, :453:26]
        reg_dpc = {_RANDOM_4[31:10], _RANDOM_5[11:0]};	// @[CSR.scala:381:25, :454:20]
        reg_dscratch0 = {_RANDOM_5[31:12], _RANDOM_6, _RANDOM_7[11:0]};	// @[CSR.scala:454:20, :455:26]
        reg_singleStepped = _RANDOM_7[12];	// @[CSR.scala:455:26, :457:30]
        reg_bp_0_control_dmode = _RANDOM_7[18];	// @[CSR.scala:455:26, :463:19]
        reg_bp_0_control_action = _RANDOM_9[1];	// @[CSR.scala:463:19]
        reg_bp_0_control_chain = _RANDOM_9[2];	// @[CSR.scala:463:19]
        reg_bp_0_control_tmatch = _RANDOM_9[6:5];	// @[CSR.scala:463:19]
        reg_bp_0_control_x = _RANDOM_9[11];	// @[CSR.scala:463:19]
        reg_bp_0_control_w = _RANDOM_9[12];	// @[CSR.scala:463:19]
        reg_bp_0_control_r = _RANDOM_9[13];	// @[CSR.scala:463:19]
        reg_bp_0_address = {_RANDOM_9[31:14], _RANDOM_10[14:0]};	// @[CSR.scala:463:19]
        reg_pmp_0_cfg_l = _RANDOM_16[22];	// @[CSR.scala:464:20]
        reg_pmp_0_cfg_a = _RANDOM_16[26:25];	// @[CSR.scala:464:20]
        reg_pmp_0_cfg_x = _RANDOM_16[27];	// @[CSR.scala:464:20]
        reg_pmp_0_cfg_w = _RANDOM_16[28];	// @[CSR.scala:464:20]
        reg_pmp_0_cfg_r = _RANDOM_16[29];	// @[CSR.scala:464:20]
        reg_pmp_0_addr = {_RANDOM_16[31:30], _RANDOM_17[27:0]};	// @[CSR.scala:464:20]
        reg_pmp_1_cfg_l = _RANDOM_17[28];	// @[CSR.scala:464:20]
        reg_pmp_1_cfg_a = {_RANDOM_17[31], _RANDOM_18[0]};	// @[CSR.scala:464:20]
        reg_pmp_1_cfg_x = _RANDOM_18[1];	// @[CSR.scala:464:20]
        reg_pmp_1_cfg_w = _RANDOM_18[2];	// @[CSR.scala:464:20]
        reg_pmp_1_cfg_r = _RANDOM_18[3];	// @[CSR.scala:464:20]
        reg_pmp_1_addr = {_RANDOM_18[31:4], _RANDOM_19[1:0]};	// @[CSR.scala:464:20]
        reg_pmp_2_cfg_l = _RANDOM_19[2];	// @[CSR.scala:464:20]
        reg_pmp_2_cfg_a = _RANDOM_19[6:5];	// @[CSR.scala:464:20]
        reg_pmp_2_cfg_x = _RANDOM_19[7];	// @[CSR.scala:464:20]
        reg_pmp_2_cfg_w = _RANDOM_19[8];	// @[CSR.scala:464:20]
        reg_pmp_2_cfg_r = _RANDOM_19[9];	// @[CSR.scala:464:20]
        reg_pmp_2_addr = {_RANDOM_19[31:10], _RANDOM_20[7:0]};	// @[CSR.scala:464:20]
        reg_pmp_3_cfg_l = _RANDOM_20[8];	// @[CSR.scala:464:20]
        reg_pmp_3_cfg_a = _RANDOM_20[12:11];	// @[CSR.scala:464:20]
        reg_pmp_3_cfg_x = _RANDOM_20[13];	// @[CSR.scala:464:20]
        reg_pmp_3_cfg_w = _RANDOM_20[14];	// @[CSR.scala:464:20]
        reg_pmp_3_cfg_r = _RANDOM_20[15];	// @[CSR.scala:464:20]
        reg_pmp_3_addr = {_RANDOM_20[31:16], _RANDOM_21[13:0]};	// @[CSR.scala:464:20]
        reg_pmp_4_cfg_l = _RANDOM_21[14];	// @[CSR.scala:464:20]
        reg_pmp_4_cfg_a = _RANDOM_21[18:17];	// @[CSR.scala:464:20]
        reg_pmp_4_cfg_x = _RANDOM_21[19];	// @[CSR.scala:464:20]
        reg_pmp_4_cfg_w = _RANDOM_21[20];	// @[CSR.scala:464:20]
        reg_pmp_4_cfg_r = _RANDOM_21[21];	// @[CSR.scala:464:20]
        reg_pmp_4_addr = {_RANDOM_21[31:22], _RANDOM_22[19:0]};	// @[CSR.scala:464:20]
        reg_pmp_5_cfg_l = _RANDOM_22[20];	// @[CSR.scala:464:20]
        reg_pmp_5_cfg_a = _RANDOM_22[24:23];	// @[CSR.scala:464:20]
        reg_pmp_5_cfg_x = _RANDOM_22[25];	// @[CSR.scala:464:20]
        reg_pmp_5_cfg_w = _RANDOM_22[26];	// @[CSR.scala:464:20]
        reg_pmp_5_cfg_r = _RANDOM_22[27];	// @[CSR.scala:464:20]
        reg_pmp_5_addr = {_RANDOM_22[31:28], _RANDOM_23[25:0]};	// @[CSR.scala:464:20]
        reg_pmp_6_cfg_l = _RANDOM_23[26];	// @[CSR.scala:464:20]
        reg_pmp_6_cfg_a = _RANDOM_23[30:29];	// @[CSR.scala:464:20]
        reg_pmp_6_cfg_x = _RANDOM_23[31];	// @[CSR.scala:464:20]
        reg_pmp_6_cfg_w = _RANDOM_24[0];	// @[CSR.scala:464:20]
        reg_pmp_6_cfg_r = _RANDOM_24[1];	// @[CSR.scala:464:20]
        reg_pmp_6_addr = _RANDOM_24[31:2];	// @[CSR.scala:464:20]
        reg_pmp_7_cfg_l = _RANDOM_25[0];	// @[CSR.scala:464:20]
        reg_pmp_7_cfg_a = _RANDOM_25[4:3];	// @[CSR.scala:464:20]
        reg_pmp_7_cfg_x = _RANDOM_25[5];	// @[CSR.scala:464:20]
        reg_pmp_7_cfg_w = _RANDOM_25[6];	// @[CSR.scala:464:20]
        reg_pmp_7_cfg_r = _RANDOM_25[7];	// @[CSR.scala:464:20]
        reg_pmp_7_addr = {_RANDOM_25[31:8], _RANDOM_26[5:0]};	// @[CSR.scala:464:20]
        reg_mie = {_RANDOM_26[31:6], _RANDOM_27, _RANDOM_28[5:0]};	// @[CSR.scala:464:20, :466:20]
        reg_mepc = {_RANDOM_32[31:22], _RANDOM_33[23:0]};	// @[CSR.scala:476:21]
        reg_mcause = {_RANDOM_33[31:24], _RANDOM_34, _RANDOM_35[23:0]};	// @[CSR.scala:476:21, :477:27]
        reg_mtval = {_RANDOM_35[31:24], _RANDOM_36[25:0]};	// @[CSR.scala:477:27, :478:22]
        reg_mscratch = {_RANDOM_38[31:2], _RANDOM_39, _RANDOM_40[1:0]};	// @[CSR.scala:480:25]
        reg_mtvec = {_RANDOM_40[31:2], _RANDOM_41[1:0]};	// @[CSR.scala:480:25, :483:31]
        reg_wfi = _RANDOM_80[14];	// @[CSR.scala:542:54]
        reg_mcountinhibit = _RANDOM_80[25:23];	// @[CSR.scala:542:54, :551:34]
        small_0 = _RANDOM_80[31:26];	// @[CSR.scala:542:54, Counters.scala:45:41]
        large_0 = {_RANDOM_81, _RANDOM_82[25:0]};	// @[Counters.scala:50:31]
        small_1 = _RANDOM_82[31:26];	// @[Counters.scala:45:41, :50:31]
        large_1 = {_RANDOM_83, _RANDOM_84[25:0]};	// @[Counters.scala:50:31]
        reg_misa = {_RANDOM_84[31:26], _RANDOM_85, _RANDOM_86[25:0]};	// @[CSR.scala:610:25, Counters.scala:50:31]
        reg_custom_0 = {_RANDOM_86[31:26], _RANDOM_87, _RANDOM_88[25:0]};	// @[CSR.scala:610:25, :753:43]
        io_status_cease_r = _RANDOM_94[26];	// @[Reg.scala:35:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_rw_rdata = _io_rw_rdata_WIRE;	// @[Mux.scala:27:73]
  assign io_decode_0_read_illegal = ~csr_exists | (&{io_decode_0_inst[24], io_decode_0_inst[25], _GEN_10[0], io_decode_0_inst[27], io_decode_0_inst[28], io_decode_0_inst[29], io_decode_0_inst[30], _GEN_10[5]}) & ~reg_debug;	// @[CSR.scala:453:26, :841:111, :865:7, :867:36, :868:{42,45}, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign io_decode_0_write_illegal = &(io_decode_0_inst[31:30]);	// @[CSR.scala:839:27, :871:{33,41}]
  assign io_decode_0_write_flush = ~(io_decode_0_write_flush_addr_m > 12'h33F & io_decode_0_write_flush_addr_m < 12'h344);	// @[CSR.scala:841:93, :873:25, :874:{7,16,35,45}]
  assign io_decode_0_system_illegal = (|{&{_GEN_9[0], _GEN_9[1], _GEN_9[2], _GEN_9[3], _GEN_9[4], _GEN_9[5], io_decode_0_inst[28], io_decode_0_inst[29], _GEN_9[8], _GEN_9[9]}, &{io_decode_0_inst[30], _GEN_9[9]}}) & io_decode_0_inst[30] & io_decode_0_inst[27] & ~reg_debug;	// @[CSR.scala:453:26, :839:27, :868:45, :879:{21,33,37}, Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_csr_stall = _io_csr_stall_output;	// @[CSR.scala:1099:27]
  assign io_eret = _exception_T | insn_ret;	// @[CSR.scala:835:83, :940:{24,38}]
  assign io_singleStep = _io_singleStep_output;	// @[CSR.scala:941:34]
  assign io_status_debug = reg_debug;	// @[CSR.scala:453:26]
  assign io_status_wfi = reg_wfi;	// @[CSR.scala:542:54]
  assign io_status_isa = reg_misa[31:0];	// @[CSR.scala:610:25, :945:17]
  assign io_evec = insn_ret ? (_T_375 ? ~(~reg_dpc | _GEN_7) : ~(~reg_mepc | _GEN_7)) : trapToDebug ? {22'h0, reg_debug ? {8'h80, ~insn_break, 3'h0} : 12'h800} : {2'h0, _read_mtvec_T_5[0] & cause[63] & cause[7:6] == 2'h0 ? {_read_mtvec_T_5[31:8], cause[5:0]} : _read_mtvec_T_5[31:2], 2'h0};	// @[CSR.scala:453:26, :454:20, :476:21, :611:32, :835:83, :900:8, :902:25, :903:30, :906:119, :909:{22,37}, :919:32, :920:33, :921:{24,55,70,94}, :922:{8,38}, :935:17, :936:11, :1053:19, :1055:48, :1072:{48,66}, :1076:15, :1077:65, :1583:{26,28,31}, Cat.scala:33:92, package.scala:166:35]
  assign io_time = value_1;	// @[Cat.scala:33:92]
  assign io_interrupt = ((io_interrupts_debug | _which_T_19) & ~_io_singleStep_output | reg_singleStepped) & ~(reg_debug | io_status_cease_r);	// @[CSR.scala:453:26, :457:30, :581:25, :587:{33,36,51,73,76,88}, :941:34, :1555:90, Reg.scala:35:20]
  assign io_interrupt_cause = {60'h0, io_interrupts_debug ? 4'hE : _which_T_19 ? 4'hB : 4'h4} - 64'h8000000000000000;	// @[CSR.scala:581:25, :586:63, :1201:32, Mux.scala:47:70]
  assign io_bp_0_control_action = reg_bp_0_control_action;	// @[CSR.scala:463:19]
  assign io_bp_0_control_chain = reg_bp_0_control_chain;	// @[CSR.scala:463:19]
  assign io_bp_0_control_tmatch = reg_bp_0_control_tmatch;	// @[CSR.scala:463:19]
  assign io_bp_0_control_x = reg_bp_0_control_x;	// @[CSR.scala:463:19]
  assign io_bp_0_control_w = reg_bp_0_control_w;	// @[CSR.scala:463:19]
  assign io_bp_0_control_r = reg_bp_0_control_r;	// @[CSR.scala:463:19]
  assign io_bp_0_address = reg_bp_0_address;	// @[CSR.scala:463:19]
  assign io_pmp_0_cfg_l = reg_pmp_0_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_0_cfg_a = reg_pmp_0_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_0_cfg_x = reg_pmp_0_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_0_cfg_w = reg_pmp_0_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_0_cfg_r = reg_pmp_0_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_0_addr = reg_pmp_0_addr;	// @[CSR.scala:464:20]
  assign io_pmp_0_mask = {_GEN & ~(_GEN + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_1_cfg_l = reg_pmp_1_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_1_cfg_a = reg_pmp_1_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_1_cfg_x = reg_pmp_1_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_1_cfg_w = reg_pmp_1_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_1_cfg_r = reg_pmp_1_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_1_addr = reg_pmp_1_addr;	// @[CSR.scala:464:20]
  assign io_pmp_1_mask = {_GEN_0 & ~(_GEN_0 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_2_cfg_l = reg_pmp_2_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_2_cfg_a = reg_pmp_2_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_2_cfg_x = reg_pmp_2_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_2_cfg_w = reg_pmp_2_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_2_cfg_r = reg_pmp_2_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_2_addr = reg_pmp_2_addr;	// @[CSR.scala:464:20]
  assign io_pmp_2_mask = {_GEN_1 & ~(_GEN_1 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_3_cfg_l = reg_pmp_3_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_3_cfg_a = reg_pmp_3_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_3_cfg_x = reg_pmp_3_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_3_cfg_w = reg_pmp_3_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_3_cfg_r = reg_pmp_3_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_3_addr = reg_pmp_3_addr;	// @[CSR.scala:464:20]
  assign io_pmp_3_mask = {_GEN_2 & ~(_GEN_2 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_4_cfg_l = reg_pmp_4_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_4_cfg_a = reg_pmp_4_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_4_cfg_x = reg_pmp_4_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_4_cfg_w = reg_pmp_4_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_4_cfg_r = reg_pmp_4_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_4_addr = reg_pmp_4_addr;	// @[CSR.scala:464:20]
  assign io_pmp_4_mask = {_GEN_3 & ~(_GEN_3 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_5_cfg_l = reg_pmp_5_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_5_cfg_a = reg_pmp_5_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_5_cfg_x = reg_pmp_5_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_5_cfg_w = reg_pmp_5_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_5_cfg_r = reg_pmp_5_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_5_addr = reg_pmp_5_addr;	// @[CSR.scala:464:20]
  assign io_pmp_5_mask = {_GEN_4 & ~(_GEN_4 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_6_cfg_l = reg_pmp_6_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_6_cfg_a = reg_pmp_6_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_6_cfg_x = reg_pmp_6_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_6_cfg_w = reg_pmp_6_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_6_cfg_r = reg_pmp_6_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_6_addr = reg_pmp_6_addr;	// @[CSR.scala:464:20]
  assign io_pmp_6_mask = {_GEN_5 & ~(_GEN_5 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_pmp_7_cfg_l = reg_pmp_7_cfg_l;	// @[CSR.scala:464:20]
  assign io_pmp_7_cfg_a = reg_pmp_7_cfg_a;	// @[CSR.scala:464:20]
  assign io_pmp_7_cfg_x = reg_pmp_7_cfg_x;	// @[CSR.scala:464:20]
  assign io_pmp_7_cfg_w = reg_pmp_7_cfg_w;	// @[CSR.scala:464:20]
  assign io_pmp_7_cfg_r = reg_pmp_7_cfg_r;	// @[CSR.scala:464:20]
  assign io_pmp_7_addr = reg_pmp_7_addr;	// @[CSR.scala:464:20]
  assign io_pmp_7_mask = {_GEN_6 & ~(_GEN_6 + 30'h1), 2'h3};	// @[PMP.scala:27:14, :58:{14,16,23}]
  assign io_inhibit_cycle = reg_mcountinhibit[0];	// @[CSR.scala:551:34, :552:40]
  assign io_trace_0_valid = io_retire | _io_trace_0_exception_output;	// @[CSR.scala:960:43, :1539:32]
  assign io_trace_0_iaddr = io_pc;
  assign io_trace_0_insn = io_inst_0;
  assign io_trace_0_exception = _io_trace_0_exception_output;	// @[CSR.scala:960:43]
  assign io_customCSRs_0_value = reg_custom_0;	// @[CSR.scala:753:43]
endmodule

