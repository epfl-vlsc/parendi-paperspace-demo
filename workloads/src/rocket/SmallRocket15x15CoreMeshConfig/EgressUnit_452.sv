// Generated by CIRCT firtool-1.30.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module EgressUnit_452(
  input         clock,
                reset,
                io_in_0_valid,
                io_in_0_bits_head,
                io_in_0_bits_tail,
  input  [72:0] io_in_0_bits_payload,
  input  [8:0]  io_in_0_bits_flow_ingress_node,
  input  [1:0]  io_in_0_bits_flow_ingress_node_id,
  input         io_allocs_0_alloc,
                io_credit_alloc_0_alloc,
                io_credit_alloc_0_tail,
  output        io_credit_available_0,
                io_channel_status_0_occupied,
                io_out_valid,
                io_out_bits_head,
                io_out_bits_tail,
  output [72:0] io_out_bits_payload
);

  wire       _q_io_enq_ready;	// @[EgressUnit.scala:22:17]
  wire [1:0] _q_io_count;	// @[EgressUnit.scala:22:17]
  reg        channel_empty;	// @[EgressUnit.scala:20:30]
  wire       _q_io_enq_bits_ingress_id_T_664 = io_in_0_bits_flow_ingress_node_id == 2'h2;	// @[EgressUnit.scala:32:27]
  wire [9:0] _GEN =
    (io_in_0_bits_flow_ingress_node == 9'h5A & _q_io_enq_bits_ingress_id_T_664 ? 10'h110 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCC & _q_io_enq_bits_ingress_id_T_664 ? 10'h266 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB4 & _q_io_enq_bits_ingress_id_T_664 ? 10'h21E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h15 & _q_io_enq_bits_ingress_id_T_664 ? 10'h41 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h6E & _q_io_enq_bits_ingress_id_T_664 ? 10'h14C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hAE & _q_io_enq_bits_ingress_id_T_664 ? 10'h20C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA6 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1F4 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC4 & _q_io_enq_bits_ingress_id_T_664 ? 10'h24E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h44 & _q_io_enq_bits_ingress_id_T_664 ? 10'hCE : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hF & _q_io_enq_bits_ingress_id_T_664 ? 10'h2F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hAD & _q_io_enq_bits_ingress_id_T_664 ? 10'h209 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hBE & _q_io_enq_bits_ingress_id_T_664 ? 10'h23C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h30 & _q_io_enq_bits_ingress_id_T_664 ? 10'h92 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA5 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1F1 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB5 & _q_io_enq_bits_ingress_id_T_664 ? 10'h221 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD4 & _q_io_enq_bits_ingress_id_T_664 ? 10'h27E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h29 & _q_io_enq_bits_ingress_id_T_664 ? 10'h7D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4D & _q_io_enq_bits_ingress_id_T_664 ? 10'hE9 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCD & _q_io_enq_bits_ingress_id_T_664 ? 10'h269 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h23 & _q_io_enq_bits_ingress_id_T_664 ? 10'h6B : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hB7 & _q_io_enq_bits_ingress_id_T_664 ? 10'h227 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h80 & _q_io_enq_bits_ingress_id_T_664 ? 10'h182 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7E & _q_io_enq_bits_ingress_id_T_664 ? 10'h17C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC & _q_io_enq_bits_ingress_id_T_664 ? 10'h26 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9D & _q_io_enq_bits_ingress_id_T_664 ? 10'h1D9 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h2C & _q_io_enq_bits_ingress_id_T_664 ? 10'h86 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4A & _q_io_enq_bits_ingress_id_T_664 ? 10'hE0 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3A & _q_io_enq_bits_ingress_id_T_664 ? 10'hB0 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3F & _q_io_enq_bits_ingress_id_T_664 ? 10'hBF : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB8 & _q_io_enq_bits_ingress_id_T_664 ? 10'h22A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h21 & _q_io_enq_bits_ingress_id_T_664 ? 10'h65 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA0 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1E2 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8B & _q_io_enq_bits_ingress_id_T_664 ? 10'h1A3 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h39 & _q_io_enq_bits_ingress_id_T_664 ? 10'hAD : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4F & _q_io_enq_bits_ingress_id_T_664 ? 10'hEF : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC1 & _q_io_enq_bits_ingress_id_T_664 ? 10'h245 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hAB & _q_io_enq_bits_ingress_id_T_664 ? 10'h203 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hBB & _q_io_enq_bits_ingress_id_T_664 ? 10'h233 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8C & _q_io_enq_bits_ingress_id_T_664 ? 10'h1A6 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h78 & _q_io_enq_bits_ingress_id_T_664 ? 10'h16A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h71 & _q_io_enq_bits_ingress_id_T_664 ? 10'h155 : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5B & _q_io_enq_bits_ingress_id_T_664 ? 10'h113 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h74 & _q_io_enq_bits_ingress_id_T_664 ? 10'h15E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h52 & _q_io_enq_bits_ingress_id_T_664 ? 10'hF8 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h58 & _q_io_enq_bits_ingress_id_T_664 ? 10'h10A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h57 & _q_io_enq_bits_ingress_id_T_664 ? 10'h107 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h98 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1CA : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h11 & _q_io_enq_bits_ingress_id_T_664 ? 10'h35 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC7 & _q_io_enq_bits_ingress_id_T_664 ? 10'h257 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h84 & _q_io_enq_bits_ingress_id_T_664 ? 10'h18E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA9 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1FD : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7B & _q_io_enq_bits_ingress_id_T_664 ? 10'h173 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h82 & _q_io_enq_bits_ingress_id_T_664 ? 10'h188 : 10'h0);	// @[EgressUnit.scala:31:{39,75}, :32:27, Mux.scala:27:73]
  wire [9:0] _GEN_0 =
    (io_in_0_bits_flow_ingress_node == 9'hBD & _q_io_enq_bits_ingress_id_T_664 ? 10'h239 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h95 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1C1 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h17 & _q_io_enq_bits_ingress_id_T_664 ? 10'h47 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h40 & _q_io_enq_bits_ingress_id_T_664 ? 10'hC2 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD0 & _q_io_enq_bits_ingress_id_T_664 ? 10'h272 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h51 & _q_io_enq_bits_ingress_id_T_664 ? 10'hF5 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h65 & _q_io_enq_bits_ingress_id_T_664 ? 10'h131 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB0 & _q_io_enq_bits_ingress_id_T_664 ? 10'h212 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h83 & _q_io_enq_bits_ingress_id_T_664 ? 10'h18B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h35 & _q_io_enq_bits_ingress_id_T_664 ? 10'hA1 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h67 & _q_io_enq_bits_ingress_id_T_664 ? 10'h137 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB1 & _q_io_enq_bits_ingress_id_T_664 ? 10'h215 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1D & _q_io_enq_bits_ingress_id_T_664 ? 10'h59 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hDC & _q_io_enq_bits_ingress_id_T_664 ? 10'h296 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8A & _q_io_enq_bits_ingress_id_T_664 ? 10'h1A0 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h66 & _q_io_enq_bits_ingress_id_T_664 ? 10'h134 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h69 & _q_io_enq_bits_ingress_id_T_664 ? 10'h13D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC9 & _q_io_enq_bits_ingress_id_T_664 ? 10'h25D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA7 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1F7 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h86 & _q_io_enq_bits_ingress_id_T_664 ? 10'h194 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4B & _q_io_enq_bits_ingress_id_T_664 ? 10'hE3 : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2E & _q_io_enq_bits_ingress_id_T_664 ? 10'h8C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h2F & _q_io_enq_bits_ingress_id_T_664 ? 10'h8F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h91 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1B5 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h50 & _q_io_enq_bits_ingress_id_T_664 ? 10'hF2 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h20 & _q_io_enq_bits_ingress_id_T_664 ? 10'h62 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC0 & _q_io_enq_bits_ingress_id_T_664 ? 10'h242 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h5F & _q_io_enq_bits_ingress_id_T_664 ? 10'h11F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h55 & _q_io_enq_bits_ingress_id_T_664 ? 10'h101 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h85 & _q_io_enq_bits_ingress_id_T_664 ? 10'h191 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h89 & _q_io_enq_bits_ingress_id_T_664 ? 10'h19D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h64 & _q_io_enq_bits_ingress_id_T_664 ? 10'h12E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7 & _q_io_enq_bits_ingress_id_T_664 ? 10'h17 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7A & _q_io_enq_bits_ingress_id_T_664 ? 10'h170 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1A & _q_io_enq_bits_ingress_id_T_664 ? 10'h50 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA3 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1EB : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h56 & _q_io_enq_bits_ingress_id_T_664 ? 10'h104 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h93 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1BB : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h5D & _q_io_enq_bits_ingress_id_T_664 ? 10'h119 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h26 & _q_io_enq_bits_ingress_id_T_664 ? 10'h74 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h97 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1C7 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB3 & _q_io_enq_bits_ingress_id_T_664 ? 10'h21B : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hD3 & _q_io_enq_bits_ingress_id_T_664 ? 10'h27B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h14 & _q_io_enq_bits_ingress_id_T_664 ? 10'h3E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h59 & _q_io_enq_bits_ingress_id_T_664 ? 10'h10D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h70 & _q_io_enq_bits_ingress_id_T_664 ? 10'h152 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD8 & _q_io_enq_bits_ingress_id_T_664 ? 10'h28A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1 & _q_io_enq_bits_ingress_id_T_664 ? 10'h5 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9C & _q_io_enq_bits_ingress_id_T_664 ? 10'h1D6 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hBA & _q_io_enq_bits_ingress_id_T_664 ? 10'h230 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h45 & _q_io_enq_bits_ingress_id_T_664 ? 10'hD1 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h43 & _q_io_enq_bits_ingress_id_T_664 ? 10'hCB : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h6 & _q_io_enq_bits_ingress_id_T_664 ? 10'h14 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h6D & _q_io_enq_bits_ingress_id_T_664 ? 10'h149 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h94 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1BE : 10'h0);	// @[EgressUnit.scala:31:{39,75}, :32:27, Mux.scala:27:73]
  wire [9:0] _GEN_1 =
    (io_in_0_bits_flow_ingress_node == 9'h6B & _q_io_enq_bits_ingress_id_T_664 ? 10'h143 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h68 & _q_io_enq_bits_ingress_id_T_664 ? 10'h13A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD7 & _q_io_enq_bits_ingress_id_T_664 ? 10'h287 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h73 & _q_io_enq_bits_ingress_id_T_664 ? 10'h15B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD5 & _q_io_enq_bits_ingress_id_T_664 ? 10'h281 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h96 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1C4 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h90 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1B2 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCF & _q_io_enq_bits_ingress_id_T_664 ? 10'h26F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h2B & _q_io_enq_bits_ingress_id_T_664 ? 10'h83 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3E & _q_io_enq_bits_ingress_id_T_664 ? 10'hBC : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD6 & _q_io_enq_bits_ingress_id_T_664 ? 10'h284 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9E & _q_io_enq_bits_ingress_id_T_664 ? 10'h1DC : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h25 & _q_io_enq_bits_ingress_id_T_664 ? 10'h71 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h72 & _q_io_enq_bits_ingress_id_T_664 ? 10'h158 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD2 & _q_io_enq_bits_ingress_id_T_664 ? 10'h278 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3D & _q_io_enq_bits_ingress_id_T_664 ? 10'hB9 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC2 & _q_io_enq_bits_ingress_id_T_664 ? 10'h248 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h76 & _q_io_enq_bits_ingress_id_T_664 ? 10'h164 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9A & _q_io_enq_bits_ingress_id_T_664 ? 10'h1D0 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h60 & _q_io_enq_bits_ingress_id_T_664 ? 10'h122 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h5C & _q_io_enq_bits_ingress_id_T_664 ? 10'h116 : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h92 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1B8 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9F & _q_io_enq_bits_ingress_id_T_664 ? 10'h1DF : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h27 & _q_io_enq_bits_ingress_id_T_664 ? 10'h77 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h34 & _q_io_enq_bits_ingress_id_T_664 ? 10'h9E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB2 & _q_io_enq_bits_ingress_id_T_664 ? 10'h218 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h16 & _q_io_enq_bits_ingress_id_T_664 ? 10'h44 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCB & _q_io_enq_bits_ingress_id_T_664 ? 10'h263 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC3 & _q_io_enq_bits_ingress_id_T_664 ? 10'h24B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hBF & _q_io_enq_bits_ingress_id_T_664 ? 10'h23F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hAF & _q_io_enq_bits_ingress_id_T_664 ? 10'h20F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA1 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1E5 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD1 & _q_io_enq_bits_ingress_id_T_664 ? 10'h275 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB6 & _q_io_enq_bits_ingress_id_T_664 ? 10'h224 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3C & _q_io_enq_bits_ingress_id_T_664 ? 10'hB6 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4E & _q_io_enq_bits_ingress_id_T_664 ? 10'hEC : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h36 & _q_io_enq_bits_ingress_id_T_664 ? 10'hA4 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h10 & _q_io_enq_bits_ingress_id_T_664 ? 10'h32 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC5 & _q_io_enq_bits_ingress_id_T_664 ? 10'h251 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h42 & _q_io_enq_bits_ingress_id_T_664 ? 10'hC8 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h12 & _q_io_enq_bits_ingress_id_T_664 ? 10'h38 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h22 & _q_io_enq_bits_ingress_id_T_664 ? 10'h68 : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6F & _q_io_enq_bits_ingress_id_T_664 ? 10'h14F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCA & _q_io_enq_bits_ingress_id_T_664 ? 10'h260 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8D & _q_io_enq_bits_ingress_id_T_664 ? 10'h1A9 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h63 & _q_io_enq_bits_ingress_id_T_664 ? 10'h12B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4C & _q_io_enq_bits_ingress_id_T_664 ? 10'hE6 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h49 & _q_io_enq_bits_ingress_id_T_664 ? 10'hDD : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hCE & _q_io_enq_bits_ingress_id_T_664 ? 10'h26C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h48 & _q_io_enq_bits_ingress_id_T_664 ? 10'hDA : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h31 & _q_io_enq_bits_ingress_id_T_664 ? 10'h95 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h88 & _q_io_enq_bits_ingress_id_T_664 ? 10'h19A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h61 & _q_io_enq_bits_ingress_id_T_664 ? 10'h125 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hE & _q_io_enq_bits_ingress_id_T_664 ? 10'h2C : 10'h0);	// @[EgressUnit.scala:31:{39,75}, :32:27, Mux.scala:27:73]
  wire [9:0] _GEN_2 =
    (io_in_0_bits_flow_ingress_node == 9'h5E & _q_io_enq_bits_ingress_id_T_664 ? 10'h11C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h32 & _q_io_enq_bits_ingress_id_T_664 ? 10'h98 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3 & _q_io_enq_bits_ingress_id_T_664 ? 10'hB : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h13 & _q_io_enq_bits_ingress_id_T_664 ? 10'h3B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h5 & _q_io_enq_bits_ingress_id_T_664 ? 10'h11 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hDD & _q_io_enq_bits_ingress_id_T_664 ? 10'h299 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB & _q_io_enq_bits_ingress_id_T_664 ? 10'h23 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8F & _q_io_enq_bits_ingress_id_T_664 ? 10'h1AF : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h77 & _q_io_enq_bits_ingress_id_T_664 ? 10'h167 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h8E & _q_io_enq_bits_ingress_id_T_664 ? 10'h1AC : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA4 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1EE : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hB9 & _q_io_enq_bits_ingress_id_T_664 ? 10'h22D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC6 & _q_io_enq_bits_ingress_id_T_664 ? 10'h254 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h87 & _q_io_enq_bits_ingress_id_T_664 ? 10'h197 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hBC & _q_io_enq_bits_ingress_id_T_664 ? 10'h236 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1F & _q_io_enq_bits_ingress_id_T_664 ? 10'h5F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9B & _q_io_enq_bits_ingress_id_T_664 ? 10'h1D3 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h3B & _q_io_enq_bits_ingress_id_T_664 ? 10'hB3 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h53 & _q_io_enq_bits_ingress_id_T_664 ? 10'hFB : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1B & _q_io_enq_bits_ingress_id_T_664 ? 10'h53 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h6C & _q_io_enq_bits_ingress_id_T_664 ? 10'h146 : 10'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7F & _q_io_enq_bits_ingress_id_T_664 ? 10'h17F : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h18 & _q_io_enq_bits_ingress_id_T_664 ? 10'h4A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hAC & _q_io_enq_bits_ingress_id_T_664 ? 10'h206 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h19 & _q_io_enq_bits_ingress_id_T_664 ? 10'h4D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h28 & _q_io_enq_bits_ingress_id_T_664 ? 10'h7A : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h79 & _q_io_enq_bits_ingress_id_T_664 ? 10'h16D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h62 & _q_io_enq_bits_ingress_id_T_664 ? 10'h128 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h2D & _q_io_enq_bits_ingress_id_T_664 ? 10'h89 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA8 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1FA : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7C & _q_io_enq_bits_ingress_id_T_664 ? 10'h176 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h9 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1D : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h47 & _q_io_enq_bits_ingress_id_T_664 ? 10'hD7 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h46 & _q_io_enq_bits_ingress_id_T_664 ? 10'hD4 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD & _q_io_enq_bits_ingress_id_T_664 ? 10'h29 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h4 & _q_io_enq_bits_ingress_id_T_664 ? 10'hE : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h6A & _q_io_enq_bits_ingress_id_T_664 ? 10'h140 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h7D & _q_io_enq_bits_ingress_id_T_664 ? 10'h179 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h99 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1CD : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hC8 & _q_io_enq_bits_ingress_id_T_664 ? 10'h25A : 10'h0)
    | {io_in_0_bits_flow_ingress_node == 9'hAA & _q_io_enq_bits_ingress_id_T_664, 1'h0, io_in_0_bits_flow_ingress_node == 9'h2A & _q_io_enq_bits_ingress_id_T_664, 1'h0, io_in_0_bits_flow_ingress_node == 9'hA & _q_io_enq_bits_ingress_id_T_664, 1'h0, io_in_0_bits_flow_ingress_node == 9'h2 & _q_io_enq_bits_ingress_id_T_664, 1'h0, io_in_0_bits_flow_ingress_node == 9'h0 & _q_io_enq_bits_ingress_id_T_664, 1'h0} | (io_in_0_bits_flow_ingress_node == 9'h75 & _q_io_enq_bits_ingress_id_T_664 ? 10'h161 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h24 & _q_io_enq_bits_ingress_id_T_664 ? 10'h6E : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h54 & _q_io_enq_bits_ingress_id_T_664 ? 10'hFE : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hDA & _q_io_enq_bits_ingress_id_T_664 ? 10'h290 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h41 & _q_io_enq_bits_ingress_id_T_664 ? 10'hC5 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h37 & _q_io_enq_bits_ingress_id_T_664 ? 10'hA7 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hDB & _q_io_enq_bits_ingress_id_T_664 ? 10'h293 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h38 & _q_io_enq_bits_ingress_id_T_664 ? 10'hAA : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1C & _q_io_enq_bits_ingress_id_T_664 ? 10'h56 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hA2 & _q_io_enq_bits_ingress_id_T_664 ? 10'h1E8 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h1E & _q_io_enq_bits_ingress_id_T_664 ? 10'h5C : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h81 & _q_io_enq_bits_ingress_id_T_664 ? 10'h185 : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'h33 & _q_io_enq_bits_ingress_id_T_664 ? 10'h9B : 10'h0) | (io_in_0_bits_flow_ingress_node == 9'hD9 & _q_io_enq_bits_ingress_id_T_664 ? 10'h28D : 10'h0);	// @[EgressUnit.scala:21:17, :31:{39,75}, :32:27, Mux.scala:27:73]
  always @(posedge clock) begin
    if (reset)
      channel_empty <= 1'h1;	// @[EgressUnit.scala:20:30]
    else
      channel_empty <= ~io_allocs_0_alloc & (io_credit_alloc_0_alloc & io_credit_alloc_0_tail | channel_empty);	// @[EgressUnit.scala:20:30, :44:{34,62}, :45:19, :49:29, :50:19]
  end // always @(posedge)
  `ifndef SYNTHESIS
    always @(posedge clock) begin	// @[EgressUnit.scala:38:9]
      if (~reset & io_in_0_valid & ~_q_io_enq_ready) begin	// @[EgressUnit.scala:22:17, :38:{9,30}]
        if (`ASSERT_VERBOSE_COND_)	// @[EgressUnit.scala:38:9]
          $error("Assertion failed\n    at EgressUnit.scala:38 assert(!(q.io.enq.valid && !q.io.enq.ready))\n");	// @[EgressUnit.scala:38:9]
        if (`STOP_COND_)	// @[EgressUnit.scala:38:9]
          $fatal;	// @[EgressUnit.scala:38:9]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        channel_empty = _RANDOM_0[0];	// @[EgressUnit.scala:20:30]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Queue_17 q (	// @[EgressUnit.scala:22:17]
    .clock                  (clock),
    .reset                  (reset),
    .io_enq_valid           (io_in_0_valid),
    .io_enq_bits_head       (io_in_0_bits_head),
    .io_enq_bits_tail       (io_in_0_bits_tail),
    .io_enq_bits_payload    (io_in_0_bits_payload),
    .io_enq_bits_ingress_id (_GEN | _GEN_0 | _GEN_1 | _GEN_2),	// @[Mux.scala:27:73]
    .io_deq_ready           (1'h1),
    .io_enq_ready           (_q_io_enq_ready),
    .io_deq_valid           (io_out_valid),
    .io_deq_bits_head       (io_out_bits_head),
    .io_deq_bits_tail       (io_out_bits_tail),
    .io_deq_bits_payload    (io_out_bits_payload),
    .io_count               (_q_io_count)
  );
  assign io_credit_available_0 = _q_io_count == 2'h0;	// @[EgressUnit.scala:22:17, :31:39, :40:40]
  assign io_channel_status_0_occupied = ~channel_empty;	// @[EgressUnit.scala:20:30, :41:36]
endmodule

