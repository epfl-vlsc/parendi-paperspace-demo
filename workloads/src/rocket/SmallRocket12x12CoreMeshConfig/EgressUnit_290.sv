// Generated by CIRCT firtool-1.30.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module EgressUnit_290(
  input         clock,
                reset,
                io_in_0_valid,
                io_in_0_bits_head,
                io_in_0_bits_tail,
  input  [72:0] io_in_0_bits_payload,
  input  [8:0]  io_in_0_bits_flow_ingress_node,
  input  [1:0]  io_in_0_bits_flow_ingress_node_id,
  input         io_allocs_0_alloc,
                io_credit_alloc_0_alloc,
                io_credit_alloc_0_tail,
  output        io_credit_available_0,
                io_channel_status_0_occupied,
                io_out_valid,
                io_out_bits_head,
                io_out_bits_tail,
  output [72:0] io_out_bits_payload
);

  wire       _q_io_enq_ready;	// EgressUnit.scala:22:17
  wire [1:0] _q_io_count;	// EgressUnit.scala:22:17
  reg        channel_empty;	// EgressUnit.scala:20:30
  wire       _q_io_enq_bits_ingress_id_T_421 = io_in_0_bits_flow_ingress_node_id == 2'h2;	// EgressUnit.scala:32:27
  wire [8:0] _GEN =
    (io_in_0_bits_flow_ingress_node == 9'h13 & _q_io_enq_bits_ingress_id_T_421
       ? 9'h3B
       : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h146
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6E & _q_io_enq_bits_ingress_id_T_421
         ? 9'h14C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h37 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hA7
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h25 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h71
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h67 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h137
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h35 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hA1
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h57 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h107
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h42 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hC8
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h54 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hFE
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hC & _q_io_enq_bits_ingress_id_T_421
         ? 9'h26
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7D & _q_io_enq_bits_ingress_id_T_421
         ? 9'h179
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h40 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hC2
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7E & _q_io_enq_bits_ingress_id_T_421
         ? 9'h17C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h88 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h19A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h82 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h188
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h68 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h13A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1D & _q_io_enq_bits_ingress_id_T_421
         ? 9'h59
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1A & _q_io_enq_bits_ingress_id_T_421
         ? 9'h50
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h17
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4B & _q_io_enq_bits_ingress_id_T_421
         ? 9'hE3
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h34 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h9E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h11 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h35
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4C & _q_io_enq_bits_ingress_id_T_421
         ? 9'hE6
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hB
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h8A & _q_io_enq_bits_ingress_id_T_421
         ? 9'h1A0
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2E & _q_io_enq_bits_ingress_id_T_421
         ? 9'h8C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3C & _q_io_enq_bits_ingress_id_T_421
         ? 9'hB6
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h65 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h131
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h53
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h44 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hCE
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1E & _q_io_enq_bits_ingress_id_T_421
         ? 9'h5C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hD & _q_io_enq_bits_ingress_id_T_421
         ? 9'h29
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6A & _q_io_enq_bits_ingress_id_T_421
         ? 9'h140
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h23 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h6B
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7F & _q_io_enq_bits_ingress_id_T_421
         ? 9'h17F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h81 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h185
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h51 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hF5
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hF & _q_io_enq_bits_ingress_id_T_421
         ? 9'h2F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h86
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5E & _q_io_enq_bits_ingress_id_T_421
         ? 9'h11C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h33 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h9B
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h85 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h191
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hB & _q_io_enq_bits_ingress_id_T_421
         ? 9'h23
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hE
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h12 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h38
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h8B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h1A3
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h18 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h4A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6D & _q_io_enq_bits_ingress_id_T_421
         ? 9'h149
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h55 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h101
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h75 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h161
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h69 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h13D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h43 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hCB
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'hE & _q_io_enq_bits_ingress_id_T_421
         ? 9'h2C
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h74 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h15E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1F & _q_io_enq_bits_ingress_id_T_421
         ? 9'h5F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h50 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hF2
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h113
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5D & _q_io_enq_bits_ingress_id_T_421
         ? 9'h119
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h10 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h32
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h80 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h182
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h56
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h29 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h7D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h73 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h15B
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4A & _q_io_enq_bits_ingress_id_T_421
         ? 9'hE0
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h27 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h77
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h87 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h197
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h19 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h4D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h116
         : 9'h0);	// EgressUnit.scala:31:{39,75}, :32:27, Mux.scala:27:73
  wire [8:0] _GEN_0 =
    (io_in_0_bits_flow_ingress_node == 9'h60 & _q_io_enq_bits_ingress_id_T_421
       ? 9'h122
       : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h83
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h83 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h18B
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h28 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h7A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h66 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h134
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h62 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h128
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h72 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h158
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h32 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h98
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h176
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h8C & _q_io_enq_bits_ingress_id_T_421
         ? 9'h1A6
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4F & _q_io_enq_bits_ingress_id_T_421
         ? 9'hEF
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2F & _q_io_enq_bits_ingress_id_T_421
         ? 9'h8F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h45 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hD1
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h9 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h1D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h46 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hD4
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h22 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h68
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4D & _q_io_enq_bits_ingress_id_T_421
         ? 9'hE9
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5F & _q_io_enq_bits_ingress_id_T_421
         ? 9'h11F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3F & _q_io_enq_bits_ingress_id_T_421
         ? 9'hBF
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h58 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h10A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h59 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h10D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h30 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h92
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h4E & _q_io_enq_bits_ingress_id_T_421
         ? 9'hEC
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h71 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h155
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h63 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h12B
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h21 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h65
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h14 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h3E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3A & _q_io_enq_bits_ingress_id_T_421
         ? 9'hB0
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h20 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h62
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h77 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h167
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h78 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h16A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h1 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h5
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h41 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hC5
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h84 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h18E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h76 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h164
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h24 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h6E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h61 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h125
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h14
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h173
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h15 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h41
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h38 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hAA
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h64 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h12E
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h7A & _q_io_enq_bits_ingress_id_T_421
         ? 9'h170
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h53 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hFB
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5A & _q_io_enq_bits_ingress_id_T_421
         ? 9'h110
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h86 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h194
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h17 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h47
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h70 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h152
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h36 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hA4
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3B & _q_io_enq_bits_ingress_id_T_421
         ? 9'hB3
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h26 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h74
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h79 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h16D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6B & _q_io_enq_bits_ingress_id_T_421
         ? 9'h143
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h31 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h95
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h3E & _q_io_enq_bits_ingress_id_T_421
         ? 9'hBC
         : 9'h0)
    | {1'h0,
       io_in_0_bits_flow_ingress_node == 9'h2A & _q_io_enq_bits_ingress_id_T_421,
       1'h0,
       io_in_0_bits_flow_ingress_node == 9'hA & _q_io_enq_bits_ingress_id_T_421,
       1'h0,
       io_in_0_bits_flow_ingress_node == 9'h2 & _q_io_enq_bits_ingress_id_T_421,
       1'h0,
       io_in_0_bits_flow_ingress_node == 9'h0 & _q_io_enq_bits_ingress_id_T_421,
       1'h0}
    | (io_in_0_bits_flow_ingress_node == 9'h3D & _q_io_enq_bits_ingress_id_T_421
         ? 9'hB9
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h6F & _q_io_enq_bits_ingress_id_T_421
         ? 9'h14F
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h89 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h19D
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h8 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h1A
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h5 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h11
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h16 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h44
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h2D & _q_io_enq_bits_ingress_id_T_421
         ? 9'h89
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h56 & _q_io_enq_bits_ingress_id_T_421
         ? 9'h104
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h49 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hDD
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h48 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hDA
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h52 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hF8
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h39 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hAD
         : 9'h0)
    | (io_in_0_bits_flow_ingress_node == 9'h47 & _q_io_enq_bits_ingress_id_T_421
         ? 9'hD7
         : 9'h0);	// EgressUnit.scala:21:17, :31:{39,75}, :32:27, Mux.scala:27:73
  always @(posedge clock) begin
    if (reset)
      channel_empty <= 1'h1;	// EgressUnit.scala:20:30
    else
      channel_empty <=
        ~io_allocs_0_alloc
        & (io_credit_alloc_0_alloc & io_credit_alloc_0_tail | channel_empty);	// EgressUnit.scala:20:30, :44:{34,62}, :45:19, :49:29, :50:19
  end // always @(posedge)
  `ifndef SYNTHESIS
    always @(posedge clock) begin	// EgressUnit.scala:38:9
      if (~reset & io_in_0_valid & ~_q_io_enq_ready) begin	// EgressUnit.scala:22:17, :38:{9,30}
        if (`ASSERT_VERBOSE_COND_)	// EgressUnit.scala:38:9
          $error("Assertion failed\n    at EgressUnit.scala:38 assert(!(q.io.enq.valid && !q.io.enq.ready))\n");	// EgressUnit.scala:38:9
        if (`STOP_COND_)	// EgressUnit.scala:38:9
          $fatal;	// EgressUnit.scala:38:9
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        channel_empty = _RANDOM_0[0];	// EgressUnit.scala:20:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Queue_17 q (	// EgressUnit.scala:22:17
    .clock                  (clock),
    .reset                  (reset),
    .io_enq_valid           (io_in_0_valid),
    .io_enq_bits_head       (io_in_0_bits_head),
    .io_enq_bits_tail       (io_in_0_bits_tail),
    .io_enq_bits_payload    (io_in_0_bits_payload),
    .io_enq_bits_ingress_id (_GEN | _GEN_0),	// Mux.scala:27:73
    .io_deq_ready           (1'h1),
    .io_enq_ready           (_q_io_enq_ready),
    .io_deq_valid           (io_out_valid),
    .io_deq_bits_head       (io_out_bits_head),
    .io_deq_bits_tail       (io_out_bits_tail),
    .io_deq_bits_payload    (io_out_bits_payload),
    .io_count               (_q_io_count)
  );
  assign io_credit_available_0 = _q_io_count == 2'h0;	// EgressUnit.scala:22:17, :31:39, :40:40
  assign io_channel_status_0_occupied = ~channel_empty;	// EgressUnit.scala:20:30, :41:36
endmodule

